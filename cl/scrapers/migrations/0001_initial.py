# Generated by Django 3.1.7 on 2021-05-28 19:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('search', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PACERFreeDocumentRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('court_id', models.CharField(max_length=15)),
                ('pacer_case_id', models.CharField(max_length=100)),
                ('docket_number', models.CharField(max_length=5000)),
                ('case_name', models.TextField()),
                ('date_filed', models.DateField()),
                ('pacer_doc_id', models.CharField(max_length=32)),
                ('pacer_seq_no', models.IntegerField(blank=True, null=True)),
                ('document_number', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('nature_of_suit', models.TextField()),
                ('cause', models.CharField(max_length=2000)),
                ('error_msg', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UrlHash',
            fields=[
                ('id', models.CharField(editable=False, max_length=5000, primary_key=True, serialize=False, verbose_name='the ID of the item that is hashed')),
                ('sha1', models.CharField(editable=False, max_length=40, verbose_name='a SHA1 corresponding to the item')),
            ],
            options={
                'verbose_name_plural': 'URL Hashes',
            },
        ),
        migrations.CreateModel(
            name='PACERMobilePageData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('date_last_mobile_crawl', models.DateTimeField(db_index=True, help_text='When the Mobile UI was last crawled', null=True)),
                ('count_last_mobile_crawl', models.IntegerField(help_text='The number of items found during the last crawl', null=True)),
                ('count_last_rss_crawl', models.IntegerField(default=0, help_text='The number of items added from RSS that had a date after date_last_mobile_crawl')),
                ('docket', models.OneToOneField(help_text='The docket we are tracking.', on_delete=django.db.models.deletion.CASCADE, related_name='mobile_crawl_statuses', to='search.docket')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PACERFreeDocumentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateTimeField(auto_now_add=True, help_text='The moment when the scrape of the RECAP content began.')),
                ('date_completed', models.DateTimeField(blank=True, db_index=True, help_text='The moment when the scrape of the RECAP content ended.', null=True)),
                ('date_queried', models.DateField(db_index=True, help_text='The date that was queried.')),
                ('status', models.SmallIntegerField(choices=[(1, 'Scrape completed successfully'), (2, 'Scrape currently in progress'), (3, 'Scrape failed')], help_text='The status of the scrape.')),
                ('court', models.ForeignKey(help_text='The court where items were being downloaded from.', on_delete=django.db.models.deletion.CASCADE, to='search.court')),
            ],
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_time', models.DateTimeField(auto_now_add=True, verbose_name='the exact date and time of the error')),
                ('log_level', models.CharField(editable=False, max_length=15, verbose_name='the loglevel of the error encountered')),
                ('message', models.TextField(blank=True, editable=False, verbose_name='the message produced in the log')),
                ('court', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.court', verbose_name='the court where the error occurred')),
            ],
        ),
    ]
