# Generated by Django 3.1.7 on 2021-05-28 19:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('search', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SCOTUSMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('date_published', models.DateTimeField(blank=True, db_index=True, help_text='The moment when the visualization was first shared', null=True)),
                ('date_deleted', models.DateTimeField(blank=True, db_index=True, help_text='The moment when the visualization was last deleted', null=True)),
                ('title', models.CharField(help_text="The title of the visualization that you're creating.", max_length=200)),
                ('slug', models.SlugField(help_text='The URL path that the visualization will map to (the slug)', max_length=75)),
                ('notes', models.TextField(blank=True, help_text='A description to help explain the diagram, in Markdown format')),
                ('view_count', models.IntegerField(default=0, help_text='The number of times the visualization has been seen.')),
                ('published', models.BooleanField(default=False, help_text='Whether the visualization has been shared.')),
                ('deleted', models.BooleanField(default=False, help_text='Has a user chosen to delete this visualization?')),
                ('generation_time', models.FloatField(default=0, help_text='The length of time it takes to generate a visuzalization, in seconds.')),
                ('cluster_end', models.ForeignKey(help_text='The ending cluster for the visualization', on_delete=django.db.models.deletion.CASCADE, related_name='visualizations_ending_here', to='search.opinioncluster')),
                ('cluster_start', models.ForeignKey(help_text='The starting cluster for the visualization', on_delete=django.db.models.deletion.CASCADE, related_name='visualizations_starting_here', to='search.opinioncluster')),
                ('clusters', models.ManyToManyField(blank=True, help_text='The clusters involved in this visualization, including the start and end clusters.', related_name='visualizations', to='search.OpinionCluster')),
                ('user', models.ForeignKey(help_text='The user that owns the visualization', on_delete=django.db.models.deletion.CASCADE, related_name='scotus_maps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JSONVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('json_data', models.TextField(help_text='The JSON data for a particular version of the visualization.')),
                ('map', models.ForeignKey(help_text='The visualization that the json is affiliated with.', on_delete=django.db.models.deletion.CASCADE, related_name='json_versions', to='visualizations.scotusmap')),
            ],
            options={
                'ordering': ['-date_modified'],
            },
        ),
        migrations.CreateModel(
            name='Referer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('url', models.URLField(db_index=True, help_text='The URL where this item was embedded.', max_length=3000)),
                ('page_title', models.CharField(blank=True, help_text='The title of the page where the item was embedded', max_length=500)),
                ('display', models.BooleanField(default=False, help_text='Should this item be displayed?')),
                ('map', models.ForeignKey(help_text='The visualization that was embedded and which generated a referer', on_delete=django.db.models.deletion.CASCADE, related_name='referers', to='visualizations.scotusmap')),
            ],
            options={
                'unique_together': {('map', 'url')},
            },
        ),
    ]
