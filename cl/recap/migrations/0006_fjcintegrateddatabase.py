# -*- coding: utf-8 -*-


from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0056_add_fjc_court_id_values'),
        ('recap', '0005_processingqueue_document_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='FjcIntegratedDatabase',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dataset_source', models.SmallIntegerField(help_text='IDB has several source datafiles. This field helps keep track of where a row came from originally.', choices=[(1, 'Civil cases filed and terminated from SY 1970 through SY 1987'), (2, 'Civil cases filed, terminated, and pending from SY 1988 to present (2017)'), (3, 'Criminal defendants filed and terminated from SY 1970 through FY 1995'), (4, 'Criminal defendants filed, terminated, and pending from FY 1996 to present (2017)'), (5, 'Appellate cases filed and terminated from SY 1971 through FY 2007'), (6, 'Appellate cases filed, terminated, and pending from FY 2008 to present (2017)'), (7, 'Bankruptcy cases filed, terminated, and pending from FY 2008 to present (2017)')])),
                ('case_name', models.TextField(help_text='The standard name of the case', blank=True)),
                ('pacer_case_id', models.CharField(help_text='The cased ID provided by PACER.', max_length=100, db_index=True, blank=True)),
                ('date_created', models.DateTimeField(help_text='The time when this item was created', auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(help_text='The last moment when the item was modified.', auto_now=True, db_index=True)),
                ('office', models.CharField(help_text='The code that designates the office within the district where the case is filed. Must conform with format established in Volume XI, Guide to Judiciary Policies and Procedures, Appendix A.', max_length=3, blank=True)),
                ('docket_number', models.IntegerField(help_text="The number assigned by the Clerks' office; consists of 2 digit Docket Year (usually calendar year in which the case was filed) and 5 digit sequence number.", null=True, blank=True)),
                ('origin', models.SmallIntegerField(blank=True, help_text='A single digit code describing the manner in which the case was filed in the district.', null=True, choices=[(1, 'Original Proceeding'), (2, 'Removed  (began in the state court, removed to the district court)'), (3, 'Remanded for further action (removal from court of appeals)'), (4, 'Reinstated/reopened (previously opened and closed, reopened for additional action)'), (5, 'Transferred from another district(pursuant to 28 USC 1404)'), (6, 'Multi district litigation (cases transferred to this district by an order entered by Judicial Panel on Multi District Litigation pursuant to 28 USC 1407)'), (7, "Appeal to a district judge of a magistrate judge's decision"), (8, 'Second reopen'), (9, 'Third reopen'), (10, 'Fourth reopen'), (11, 'Fifth reopen'), (12, 'Sixth reopen'), (13, 'Multi district litigation originating in the district (valid beginning July 1, 2016) ')])),
                ('date_filed', models.DateField(help_text='The date on which the case was filed in the district.', null=True, db_index=True, blank=True)),
                ('jurisdiction', models.SmallIntegerField(blank=True, help_text='The code which provides the basis for the U.S. district court jurisdiction in the case. This code is used in conjunction with appropriate nature of suit code.', null=True, choices=[(1, 'Government plaintiff'), (2, 'Government defendant'), (3, 'Federal question'), (4, 'Diversity of citizenship'), (5, 'Local question')])),
                ('nature_of_suit', models.IntegerField(blank=True, help_text='A three digit statistical code representing the nature of suit of the action filed.', null=True, choices=[(110, 'Insurance'), (120, 'Marine contract actions'), (130, 'Miller act'), (140, 'Negotiable instruments'), (150, 'Overpayments & enforcement of judgments'), (151, 'Overpayments under the medicare act'), (152, 'Recovery of defaulted student loans'), (153, 'Recovery of overpayments of vet benefits'), (160, "Stockholder's suits"), (190, 'Other contract actions'), (195, 'Contract product liability'), (196, 'Contract franchise'), (210, 'Land condemnation'), (220, 'Foreclosure'), (230, 'Rent, lease, ejectment'), (245, 'Torts to land'), (245, 'Tort product liability'), (290, 'Other real property actions'), (310, 'Airplane personal injury'), (315, 'Airplane product liability'), (320, 'Assault, libel, and slander'), (330, "Federal employers' liability"), (340, 'Marine personal injury'), (345, 'Marine - Product liability'), (350, 'Motor vehicle personal injury'), (355, 'Motor vehicle product liability'), (360, 'Other personal liability'), (362, 'Medical malpractice'), (365, 'Personal injury - Product liability'), (367, 'Health care / pharm'), (368, 'Asbestos personal injury - Prod. Liab.'), (370, 'Other fraud'), (371, 'Truth in lending'), (375, 'False Claims Act'), (380, 'Other personal property damage'), (385, 'Property damage - Product liability'), (400, 'State re-appointment'), (410, 'Antitrust'), (422, 'Bankruptcy appeals rule 28 USC 158'), (423, 'Bankruptcy withdrawal 28 USC 157'), (430, 'Banks and banking'), (440, 'Civil rights other'), (441, 'Civil rights voting'), (442, 'Civil rights jobs'), (443, 'Civil rights accomodations'), (444, 'Civil rights welfare'), (445, 'Civil rights ADA employment'), (446, 'Civil rights ADA other'), (448, 'Education'), (450, 'Interstate commerce'), (460, 'Deportation'), (462, 'Naturalization, petition for hearing of denial'), (463, 'Habeas corpus - alien detainee'), (465, 'Other immigration actions'), (470, 'Civil (RICO)'), (480, 'Consumer credit'), (490, 'Cable/Satellite TV'), (510, 'Prisoner petitions - vacate sentence'), (530, 'Prisoner petitions - habeas corpus'), (535, 'Habeas corpus: Death penalty'), (540, 'Prisoner petitions - mandamus and other'), (550, 'Prisoner - civil rights'), (555, 'Prisoner - prison condition'), (560, 'Civil detainee'), (610, 'Agricultural acts'), (620, 'Food and drug acts'), (625, 'Drug related seizure of property'), (630, 'Liquor laws'), (640, 'Railroad and trucks'), (650, 'Airline regulations'), (660, 'Occupational safety/health'), (690, 'Other forfeiture and penalty suits'), (710, 'Fair Labor Standards Act'), (720, 'Labor/Management Relations Act'), (730, 'Labor/Management report & disclosure'), (740, 'Railway Labor Act'), (751, 'Family and Medical Leave Act'), (790, 'Other labor litigation'), (791, 'Employee Retirement Income Security Act'), (810, 'Selective service'), (820, 'Copyright'), (830, 'Patent'), (840, 'Trademark'), (850, 'Securities, Commodities, Exchange'), (860, 'Social security'), (861, 'HIA (1395 FF) / Medicare'), (862, 'Black lung'), (863, 'D.I.W.C. / D.I.W.W.'), (864, 'S.S.I.D.'), (865, 'R.S.I.'), (870, 'Tax suits'), (871, 'IRS 3rd party suits 26 USC 7609'), (875, 'Customer challenge 12 USC 3410'), (890, 'Other statutory actions'), (891, 'Agricultural acts'), (892, 'Economic Stabilization Act'), (893, 'Environmental matters'), (894, 'Energy Allocation Act'), (895, 'Freedom of Information Act of 1974'), (896, 'Arbitration'), (899, 'Administrative procedure act / review or appeal of agency decision'), (900, 'Appeal of fee - equal access to justice'), (910, 'Domestic relations'), (920, 'Insanity'), (930, 'Probate'), (940, 'Substitute trustee'), (950, 'Constitutionality of state statutes'), (990, 'Other'), (992, 'Local jurisdictional appeal'), (999, 'Miscellaneous')])),
                ('title', models.TextField(help_text='No description provided by FJC.', blank=True)),
                ('section', models.CharField(help_text='No description provided by FJC.', max_length=200, blank=True)),
                ('subsection', models.CharField(help_text='No description provided by FJC.', max_length=200, blank=True)),
                ('diversity_of_residence', models.SmallIntegerField(help_text='Involves diversity of citizenship for the plaintiff and defendant. First position is the citizenship of the plaintiff, second position is the citizenship of the defendant. Only used when jurisdiction is 4', null=True, blank=True)),
                ('class_action', models.BooleanField(help_text='Involves an allegation by the plaintiff that the complaint meets the prerequisites of a "Class Action" as provided in Rule 23 - F.R.CV.P. ', null=True)),
                ('monetary_demand', models.IntegerField(help_text='The monetary amount sought by plaintiff (in thousands). Amounts less than $500 appear as 1, and amounts over $10k appear as 9999. See notes in codebook.', null=True, blank=True)),
                ('county_of_residence', models.IntegerField(help_text='The code for the county of residence of the first listed plaintiff (see notes in codebook).', null=True, blank=True)),
                ('arbitration_at_filing', models.CharField(blank=True, help_text='This field is used only by the courts  participating in the Formal Arbitration Program.  It is not used for any other purpose.', max_length=1, choices=[('M', 'Mandatory'), ('V', 'Voluntary'), ('E', 'Exempt'), ('Y', 'Yes, but type unknown')])),
                ('arbitration_at_termination', models.CharField(blank=True, help_text='Termination arbitration code.', max_length=1, choices=[('M', 'Mandatory'), ('V', 'Voluntary'), ('E', 'Exempt'), ('Y', 'Yes, but type unknown')])),
                ('multidistrict_litigation_docket_number', models.TextField(help_text='A 4 digit multi district litigation docket number.', blank=True)),
                ('plaintiff', models.TextField(help_text='First listed plaintiff', blank=True)),
                ('defendant', models.TextField(help_text='First listed defendant', blank=True)),
                ('date_transfer', models.DateField(help_text='The date when the papers were received in the receiving district for a transferred  case.', null=True, blank=True)),
                ('transfer_office', models.CharField(help_text='The office number of the district losing the case.', max_length=3, blank=True)),
                ('transfer_docket_number', models.TextField(help_text='The docket number of the case int he losing district', blank=True)),
                ('transfer_origin', models.TextField(help_text='The origin number of the case in the losing district', blank=True)),
                ('date_terminated', models.DateField(help_text='The date the district court received the final judgment or the order disposing of the case.', null=True, blank=True)),
                ('termination_class_action_status', models.SmallIntegerField(blank=True, help_text='A code that indicates a case involving allegations of class action.', null=True, choices=[(2, 'Denied'), (3, 'Granted')])),
                ('procedural_progress', models.SmallIntegerField(blank=True, help_text='The point to which the case had progressed when it was disposed of. See notes in codebook.', null=True, choices=[('Before issue joined', ((1, 'No court action (before issue joined)'), (2, 'Order entered'), (11, 'Hearing held'), (12, 'Order decided'))), ('After issue joined', ((3, 'No court action (after issue joined)'), (4, 'Judgment on motion'), (5, 'Pretrial conference held'), (6, 'During court trial'), (7, 'During jury trial'), (8, 'After court trial'), (9, 'After jury trial'), (10, 'Other'), (13, 'Request for trial de novo after arbitration')))])),
                ('disposition', models.SmallIntegerField(blank=True, help_text='The manner in which the case was disposed of.', null=True, choices=[('Cases transferred or remanded', ((0, 'Transfer to another district'), (1, 'Remanded to state court'), (10, 'Multi-district litigation transfer'), (11, 'Remanded to U.S. agency'))), ('Dismissals', ((2, 'Want of prosecution'), (3, 'Lack of jurisdiction'), (12, 'Voluntarily dismissed'), (13, 'Settled'), (14, 'Other'))), ('Judgment on', ((4, 'Default'), (5, 'Consent'), (6, 'Motion before trial'), (7, 'Jury verdict'), (8, 'Directed verdict'), (9, 'Court trial'), (15, 'Award of arbitrator'), (16, 'Stayed pending bankruptcy'), (17, 'Other'), (18, 'Statistical closing'), (19, 'Appeal affirmed (magistrate judge)'), (20, 'Appeal denied (magistrate judge')))])),
                ('nature_of_judgement', models.SmallIntegerField(blank=True, help_text='Cases disposed of by an entry of a final judgment.', null=True, choices=[(0, 'No monetary award'), (1, 'Monetary award only'), (2, 'Monetary award and other'), (3, 'Injunction'), (4, 'Forfeiture/foreclosure/condemnation, etc.'), (5, 'Costs only'), (6, 'Costs and attorney fees')])),
                ('amount_received', models.IntegerField(help_text='Dollar amount received (in thousands) when appropriate. Field not used uniformally; see codebook.', null=True, blank=True)),
                ('judgment', models.SmallIntegerField(blank=True, help_text='Which party the cases was disposed in favor of.', null=True, choices=[(1, 'Plaintiff'), (2, 'Defendant'), (3, 'Both plaintiff and defendant'), (4, 'Unknown')])),
                ('pro_se', models.SmallIntegerField(blank=True, help_text='Which parties filed pro se? (See codebook for more details.)', null=True, choices=[(0, 'No pro se plaintiffs or defendants'), (1, 'Pro se plaintiffs, but no pro se defendants'), (2, 'Pro se defendants, but no pro se plaintiffs'), (3, 'Both pro se plaintiffs & defendants')])),
                ('year_of_tape', models.IntegerField(help_text='Statistical year label on data files obtained from the Administrative Office of the United States Courts.  2099 on pending case records.', null=True, blank=True)),
                ('circuit', models.ForeignKey(related_name='+', blank=True, to='search.Court', help_text='Circuit in which the case was filed.', null=True,
                                              on_delete=models.CASCADE)),
                ('district', models.ForeignKey(related_name='idb_cases', blank=True, to='search.Court', help_text='District court in which the case was filed.', null=True,
                                               on_delete=models.CASCADE)),
            ],
        ),
    ]
