# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2019-10-11 23:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0085_add_index_to_claim_number'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('recap', '0026_tweak_upload_type_choices_noop'),
    ]

    operations = [
        migrations.CreateModel(
            name='PacerFetchQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('date_completed', models.DateTimeField(blank=True, db_index=True, help_text=b'When the item was completed or errored out.', null=True)),
                ('status', models.SmallIntegerField(choices=[(1, b'Awaiting processing in queue.'), (2, b'Item processed successfully.'), (3, b'Item encountered an error while processing.'), (4, b'Item is currently being processed.'), (5, b'Item failed processing, but will be retried.'), (6, b'Item failed validity tests.')], db_index=True, default=1, help_text=b'The current status of this request. Possible values are: (1): Awaiting processing in queue., (2): Item processed successfully., (3): Item encountered an error while processing., (4): Item is currently being processed., (5): Item failed processing, but will be retried., (6): Item failed validity tests.')),
                ('request_type', models.SmallIntegerField(choices=[(1, b'HTML Docket'), (2, b'PDF')], help_text=b'The type of object that is requested')),
                ('message', models.TextField(blank=True, help_text=b'Any messages that may help a user during or after processing.')),
                ('pacer_case_id', models.CharField(blank=True, db_index=True, help_text=b'The case ID provided by PACER for the case to update (must be used in combination with the court field).', max_length=100)),
                ('docket_number', models.CharField(blank=True, help_text=b'The docket number of a case to update (must be used in combination with the court field).', max_length=50)),
                ('de_date_start', models.DateField(blank=True, help_text=b'Only fetch docket entries (de) newer than this date. Default is 1 Jan. 1960. Timezone appears to be that of the court.', null=True)),
                ('de_date_end', models.DateField(blank=True, help_text=b'Only fetch docket entries (de) older than or equal to this date. Timezone appears to be that of the court.', null=True)),
                ('de_number_start', models.IntegerField(blank=True, help_text=b'Only fetch docket entries (de) >= than this value. Warning: Using this parameter will not return numberless entries.', null=True)),
                ('de_number_end', models.IntegerField(blank=True, help_text=b'Only fetch docket entries (de) <= this value. Warning: Using this parameter will not return numberless entries.', null=True)),
                ('show_parties_and_counsel', models.BooleanField(default=True, help_text=b'Should we pull parties and counsel for a docket report?')),
                ('show_terminated_parties', models.BooleanField(default=True, help_text=b'Should we pull terminated parties and counsel as well?')),
                ('show_list_of_member_cases', models.BooleanField(default=False, help_text=b'Should we pull the list of member cases? This can add considerable expense to each docket.')),
                ('court', models.ForeignKey(help_text=b'The court where the request will be made', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pacer_fetch_queue_items', to='search.Court')),
                ('docket', models.ForeignKey(help_text=b'The ID of an existing docket object in the CourtListener database that should be updated.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pacer_fetch_queue_items', to='search.Docket')),
                ('recap_document', models.ForeignKey(help_text=b'The ID of the RECAP Document in the CourtListener databae that you wish to fetch or update.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pacer_fetch_queue_items', to='search.RECAPDocument')),
                ('user', models.ForeignKey(help_text=b'The user that made the request.', on_delete=django.db.models.deletion.CASCADE, related_name='pacer_fetch_queue_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
