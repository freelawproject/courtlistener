# Generated by Django 5.0.8 on 2024-09-10 16:53

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        (
            "api",
            "0010_remove_webhook_update_or_delete_snapshot_update_and_more",
        ),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="webhook",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="webhook",
            name="update_or_delete_snapshot_update",
        ),
        migrations.AlterField(
            model_name="webhookhistoryevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="api.webhook",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="webhook",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."enabled" IS DISTINCT FROM (NEW."enabled") OR OLD."event_type" IS DISTINCT FROM (NEW."event_type") OR OLD."failure_count" IS DISTINCT FROM (NEW."failure_count") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."url" IS DISTINCT FROM (NEW."url") OR OLD."user_id" IS DISTINCT FROM (NEW."user_id") OR OLD."version" IS DISTINCT FROM (NEW."version"))',
                    func='INSERT INTO "api_webhookhistoryevent" ("date_created", "date_modified", "enabled", "event_type", "failure_count", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "url", "user_id", "version") VALUES (OLD."date_created", OLD."date_modified", OLD."enabled", OLD."event_type", OLD."failure_count", OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."url", OLD."user_id", OLD."version"); RETURN NULL;',
                    hash="7f59f4f4c58dbace852130b00bbc731277c71574",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_a1c57",
                    table="api_webhook",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="webhook",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "api_webhookhistoryevent" ("date_created", "date_modified", "enabled", "event_type", "failure_count", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "url", "user_id", "version") VALUES (OLD."date_created", OLD."date_modified", OLD."enabled", OLD."event_type", OLD."failure_count", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."url", OLD."user_id", OLD."version"); RETURN NULL;',
                    hash="2a7c2d234520eeeef098f08c9f09b6f825f13826",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_30383",
                    table="api_webhook",
                    when="AFTER",
                ),
            ),
        ),
    ]
