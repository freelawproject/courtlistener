# Generated by Django 5.0.8 on 2024-09-10 16:53

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("search", "0034_add_harvard_pdf_to_opinioncluster"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="bankruptcyinformation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="bankruptcyinformation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="citation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="citation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claim",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claim",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claimhistory",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claimhistory",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claimtags",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="claimtags",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="court",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="court",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="courtappealsto",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="courtappealsto",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="courthouse",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="courthouse",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docket",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docket",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketentry",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketentry",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketentrytags",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketentrytags",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketpanel",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="docketpanel",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="dockettags",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="dockettags",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinion",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinion",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinioncluster",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinioncluster",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionclusternonparticipatingjudges",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionclusternonparticipatingjudges",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionclusterpanel",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionclusterpanel",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionjoinedby",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="opinionjoinedby",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="originatingcourtinformation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="originatingcourtinformation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="recapdocument",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="recapdocument",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="recapdocumenttags",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="recapdocumenttags",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="tag",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="tag",
            name="update_or_delete_snapshot_update",
        ),
        migrations.AlterField(
            model_name="bankruptcyinformationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.bankruptcyinformation",
            ),
        ),
        migrations.AlterField(
            model_name="citationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.citation",
            ),
        ),
        migrations.AlterField(
            model_name="claimevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.claim",
            ),
        ),
        migrations.AlterField(
            model_name="claimhistoryevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.claimhistory",
            ),
        ),
        migrations.AlterField(
            model_name="courtevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.court",
            ),
        ),
        migrations.AlterField(
            model_name="courthouseevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.courthouse",
            ),
        ),
        migrations.AlterField(
            model_name="docketentryevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.docketentry",
            ),
        ),
        migrations.AlterField(
            model_name="docketevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.docket",
            ),
        ),
        migrations.AlterField(
            model_name="opinionclusterevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.opinioncluster",
            ),
        ),
        migrations.AlterField(
            model_name="opinionevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.opinion",
            ),
        ),
        migrations.AlterField(
            model_name="originatingcourtinformationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.originatingcourtinformation",
            ),
        ),
        migrations.AlterField(
            model_name="recapdocumentevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.recapdocument",
            ),
        ),
        migrations.AlterField(
            model_name="tagevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="search.tag",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="bankruptcyinformation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."chapter" IS DISTINCT FROM (NEW."chapter") OR OLD."date_converted" IS DISTINCT FROM (NEW."date_converted") OR OLD."date_debtor_dismissed" IS DISTINCT FROM (NEW."date_debtor_dismissed") OR OLD."date_last_to_file_claims" IS DISTINCT FROM (NEW."date_last_to_file_claims") OR OLD."date_last_to_file_govt" IS DISTINCT FROM (NEW."date_last_to_file_govt") OR OLD."docket_id" IS DISTINCT FROM (NEW."docket_id") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."trustee_str" IS DISTINCT FROM (NEW."trustee_str"))',
                    func='INSERT INTO "search_bankruptcyinformationevent" ("chapter", "date_converted", "date_created", "date_debtor_dismissed", "date_last_to_file_claims", "date_last_to_file_govt", "date_modified", "docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "trustee_str") VALUES (OLD."chapter", OLD."date_converted", OLD."date_created", OLD."date_debtor_dismissed", OLD."date_last_to_file_claims", OLD."date_last_to_file_govt", OLD."date_modified", OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."trustee_str"); RETURN NULL;',
                    hash="6d90b79728cffbe523e8319904a1fc7d0bc82e0b",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_3d077",
                    table="search_bankruptcyinformation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="bankruptcyinformation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_bankruptcyinformationevent" ("chapter", "date_converted", "date_created", "date_debtor_dismissed", "date_last_to_file_claims", "date_last_to_file_govt", "date_modified", "docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "trustee_str") VALUES (OLD."chapter", OLD."date_converted", OLD."date_created", OLD."date_debtor_dismissed", OLD."date_last_to_file_claims", OLD."date_last_to_file_govt", OLD."date_modified", OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."trustee_str"); RETURN NULL;',
                    hash="06cd921a038bd165830cb8dc7f1897dd8bf46c22",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_62e3d",
                    table="search_bankruptcyinformation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="citation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "search_citationevent" ("cluster_id", "id", "page", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reporter", "type", "volume") VALUES (OLD."cluster_id", OLD."id", OLD."page", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."reporter", OLD."type", OLD."volume"); RETURN NULL;',
                    hash="ec22d364dbf5727ffdb0a26a5f1200f99601b46a",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_8c292",
                    table="search_citation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="citation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_citationevent" ("cluster_id", "id", "page", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "reporter", "type", "volume") VALUES (OLD."cluster_id", OLD."id", OLD."page", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."reporter", OLD."type", OLD."volume"); RETURN NULL;',
                    hash="cbd4a7bb7d831a74b557c16ec08c05ef1639c903",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_58ea6",
                    table="search_citation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claim",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."amount_claimed" IS DISTINCT FROM (NEW."amount_claimed") OR OLD."claim_number" IS DISTINCT FROM (NEW."claim_number") OR OLD."creditor_details" IS DISTINCT FROM (NEW."creditor_details") OR OLD."creditor_id" IS DISTINCT FROM (NEW."creditor_id") OR OLD."date_claim_modified" IS DISTINCT FROM (NEW."date_claim_modified") OR OLD."date_last_amendment_entered" IS DISTINCT FROM (NEW."date_last_amendment_entered") OR OLD."date_last_amendment_filed" IS DISTINCT FROM (NEW."date_last_amendment_filed") OR OLD."date_original_entered" IS DISTINCT FROM (NEW."date_original_entered") OR OLD."date_original_filed" IS DISTINCT FROM (NEW."date_original_filed") OR OLD."description" IS DISTINCT FROM (NEW."description") OR OLD."docket_id" IS DISTINCT FROM (NEW."docket_id") OR OLD."entered_by" IS DISTINCT FROM (NEW."entered_by") OR OLD."filed_by" IS DISTINCT FROM (NEW."filed_by") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."priority_claimed" IS DISTINCT FROM (NEW."priority_claimed") OR OLD."remarks" IS DISTINCT FROM (NEW."remarks") OR OLD."secured_claimed" IS DISTINCT FROM (NEW."secured_claimed") OR OLD."status" IS DISTINCT FROM (NEW."status") OR OLD."unsecured_claimed" IS DISTINCT FROM (NEW."unsecured_claimed"))',
                    func='INSERT INTO "search_claimevent" ("amount_claimed", "claim_number", "creditor_details", "creditor_id", "date_claim_modified", "date_created", "date_last_amendment_entered", "date_last_amendment_filed", "date_modified", "date_original_entered", "date_original_filed", "description", "docket_id", "entered_by", "filed_by", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_claimed", "remarks", "secured_claimed", "status", "unsecured_claimed") VALUES (OLD."amount_claimed", OLD."claim_number", OLD."creditor_details", OLD."creditor_id", OLD."date_claim_modified", OLD."date_created", OLD."date_last_amendment_entered", OLD."date_last_amendment_filed", OLD."date_modified", OLD."date_original_entered", OLD."date_original_filed", OLD."description", OLD."docket_id", OLD."entered_by", OLD."filed_by", OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."priority_claimed", OLD."remarks", OLD."secured_claimed", OLD."status", OLD."unsecured_claimed"); RETURN NULL;',
                    hash="cc31729b28eeb79c74bea1de46fbac27fafb0df2",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_7f78b",
                    table="search_claim",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claim",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_claimevent" ("amount_claimed", "claim_number", "creditor_details", "creditor_id", "date_claim_modified", "date_created", "date_last_amendment_entered", "date_last_amendment_filed", "date_modified", "date_original_entered", "date_original_filed", "description", "docket_id", "entered_by", "filed_by", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority_claimed", "remarks", "secured_claimed", "status", "unsecured_claimed") VALUES (OLD."amount_claimed", OLD."claim_number", OLD."creditor_details", OLD."creditor_id", OLD."date_claim_modified", OLD."date_created", OLD."date_last_amendment_entered", OLD."date_last_amendment_filed", OLD."date_modified", OLD."date_original_entered", OLD."date_original_filed", OLD."description", OLD."docket_id", OLD."entered_by", OLD."filed_by", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."priority_claimed", OLD."remarks", OLD."secured_claimed", OLD."status", OLD."unsecured_claimed"); RETURN NULL;',
                    hash="2c7d9f133be0980742a0bda76d49cde2328abb02",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_c63fd",
                    table="search_claim",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claimhistory",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."attachment_number" IS DISTINCT FROM (NEW."attachment_number") OR OLD."claim_id" IS DISTINCT FROM (NEW."claim_id") OR OLD."claim_doc_id" IS DISTINCT FROM (NEW."claim_doc_id") OR OLD."claim_document_type" IS DISTINCT FROM (NEW."claim_document_type") OR OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."date_upload" IS DISTINCT FROM (NEW."date_upload") OR OLD."description" IS DISTINCT FROM (NEW."description") OR OLD."document_number" IS DISTINCT FROM (NEW."document_number") OR OLD."file_size" IS DISTINCT FROM (NEW."file_size") OR OLD."filepath_ia" IS DISTINCT FROM (NEW."filepath_ia") OR OLD."filepath_local" IS DISTINCT FROM (NEW."filepath_local") OR OLD."ia_upload_failure_count" IS DISTINCT FROM (NEW."ia_upload_failure_count") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."is_available" IS DISTINCT FROM (NEW."is_available") OR OLD."is_free_on_pacer" IS DISTINCT FROM (NEW."is_free_on_pacer") OR OLD."is_sealed" IS DISTINCT FROM (NEW."is_sealed") OR OLD."ocr_status" IS DISTINCT FROM (NEW."ocr_status") OR OLD."pacer_case_id" IS DISTINCT FROM (NEW."pacer_case_id") OR OLD."pacer_dm_id" IS DISTINCT FROM (NEW."pacer_dm_id") OR OLD."pacer_doc_id" IS DISTINCT FROM (NEW."pacer_doc_id") OR OLD."page_count" IS DISTINCT FROM (NEW."page_count") OR OLD."plain_text" IS DISTINCT FROM (NEW."plain_text") OR OLD."sha1" IS DISTINCT FROM (NEW."sha1") OR OLD."thumbnail" IS DISTINCT FROM (NEW."thumbnail") OR OLD."thumbnail_status" IS DISTINCT FROM (NEW."thumbnail_status"))',
                    func='INSERT INTO "search_claimhistoryevent" ("attachment_number", "claim_doc_id", "claim_document_type", "claim_id", "date_created", "date_filed", "date_modified", "date_upload", "description", "document_number", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_case_id", "pacer_dm_id", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."attachment_number", OLD."claim_doc_id", OLD."claim_document_type", OLD."claim_id", OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."date_upload", OLD."description", OLD."document_number", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_case_id", OLD."pacer_dm_id", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;',
                    hash="8d0db772d098d6edcb3a57b12ae04d596d9f7b86",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_51cdc",
                    table="search_claimhistory",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claimhistory",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_claimhistoryevent" ("attachment_number", "claim_doc_id", "claim_document_type", "claim_id", "date_created", "date_filed", "date_modified", "date_upload", "description", "document_number", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_case_id", "pacer_dm_id", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."attachment_number", OLD."claim_doc_id", OLD."claim_document_type", OLD."claim_id", OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."date_upload", OLD."description", OLD."document_number", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_case_id", OLD."pacer_dm_id", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;',
                    hash="3a9be05fd4c10adffd72d02db61564a47519076f",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_8a93d",
                    table="search_claimhistory",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claimtags",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_claimtagsevent" ("claim_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."claim_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."tag_id"); RETURN NULL;',
                    hash="825e3576f98d413e758ce70ee393afe96eac31b9",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_1c998",
                    table="search_claim_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="claimtags",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_claimtagsevent" ("claim_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."claim_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."tag_id"); RETURN NULL;',
                    hash="3f208ceb5c460fc3114b02ecd39c4d32d2796d81",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_1a74e",
                    table="search_claim_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="court",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."citation_string" IS DISTINCT FROM (NEW."citation_string") OR OLD."date_last_pacer_contact" IS DISTINCT FROM (NEW."date_last_pacer_contact") OR OLD."end_date" IS DISTINCT FROM (NEW."end_date") OR OLD."fjc_court_id" IS DISTINCT FROM (NEW."fjc_court_id") OR OLD."full_name" IS DISTINCT FROM (NEW."full_name") OR OLD."has_opinion_scraper" IS DISTINCT FROM (NEW."has_opinion_scraper") OR OLD."has_oral_argument_scraper" IS DISTINCT FROM (NEW."has_oral_argument_scraper") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."in_use" IS DISTINCT FROM (NEW."in_use") OR OLD."jurisdiction" IS DISTINCT FROM (NEW."jurisdiction") OR OLD."notes" IS DISTINCT FROM (NEW."notes") OR OLD."pacer_court_id" IS DISTINCT FROM (NEW."pacer_court_id") OR OLD."pacer_has_rss_feed" IS DISTINCT FROM (NEW."pacer_has_rss_feed") OR OLD."pacer_rss_entry_types" IS DISTINCT FROM (NEW."pacer_rss_entry_types") OR OLD."parent_court_id" IS DISTINCT FROM (NEW."parent_court_id") OR OLD."position" IS DISTINCT FROM (NEW."position") OR OLD."short_name" IS DISTINCT FROM (NEW."short_name") OR OLD."start_date" IS DISTINCT FROM (NEW."start_date") OR OLD."url" IS DISTINCT FROM (NEW."url"))',
                    func='INSERT INTO "search_courtevent" ("citation_string", "date_last_pacer_contact", "date_modified", "end_date", "fjc_court_id", "full_name", "has_opinion_scraper", "has_oral_argument_scraper", "id", "in_use", "jurisdiction", "notes", "pacer_court_id", "pacer_has_rss_feed", "pacer_rss_entry_types", "parent_court_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "short_name", "start_date", "url") VALUES (OLD."citation_string", OLD."date_last_pacer_contact", OLD."date_modified", OLD."end_date", OLD."fjc_court_id", OLD."full_name", OLD."has_opinion_scraper", OLD."has_oral_argument_scraper", OLD."id", OLD."in_use", OLD."jurisdiction", OLD."notes", OLD."pacer_court_id", OLD."pacer_has_rss_feed", OLD."pacer_rss_entry_types", OLD."parent_court_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."position", OLD."short_name", OLD."start_date", OLD."url"); RETURN NULL;',
                    hash="a7312b4151d60062b15c3c624ec061088c34c55b",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_14e3e",
                    table="search_court",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="court",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_courtevent" ("citation_string", "date_last_pacer_contact", "date_modified", "end_date", "fjc_court_id", "full_name", "has_opinion_scraper", "has_oral_argument_scraper", "id", "in_use", "jurisdiction", "notes", "pacer_court_id", "pacer_has_rss_feed", "pacer_rss_entry_types", "parent_court_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position", "short_name", "start_date", "url") VALUES (OLD."citation_string", OLD."date_last_pacer_contact", OLD."date_modified", OLD."end_date", OLD."fjc_court_id", OLD."full_name", OLD."has_opinion_scraper", OLD."has_oral_argument_scraper", OLD."id", OLD."in_use", OLD."jurisdiction", OLD."notes", OLD."pacer_court_id", OLD."pacer_has_rss_feed", OLD."pacer_rss_entry_types", OLD."parent_court_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."position", OLD."short_name", OLD."start_date", OLD."url"); RETURN NULL;',
                    hash="8d318ab7d986170c8c3fa2abe688c86f87dae40f",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_cf358",
                    table="search_court",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="courtappealsto",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_courtappealstoevent" ("from_court_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "to_court_id") VALUES (NEW."from_court_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."to_court_id"); RETURN NULL;',
                    hash="53f78b19b59d4ee18c41095fd759ba0393aa7631",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_cec0c",
                    table="search_court_appeals_to",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="courtappealsto",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_courtappealstoevent" ("from_court_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "to_court_id") VALUES (OLD."from_court_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."to_court_id"); RETURN NULL;',
                    hash="bf003876e74bc51f807761d977b845b3c3e7cf7e",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_12060",
                    table="search_court_appeals_to",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="courthouse",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "search_courthouseevent" ("address1", "address2", "building_name", "city", "country_code", "county", "court_id", "court_seat", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "state", "zip_code") VALUES (OLD."address1", OLD."address2", OLD."building_name", OLD."city", OLD."country_code", OLD."county", OLD."court_id", OLD."court_seat", OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."state", OLD."zip_code"); RETURN NULL;',
                    hash="3ab9fa123c6d47ade6eb9badc4ac5ae37c27be2c",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_b1fd2",
                    table="search_courthouse",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="courthouse",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_courthouseevent" ("address1", "address2", "building_name", "city", "country_code", "county", "court_id", "court_seat", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "state", "zip_code") VALUES (OLD."address1", OLD."address2", OLD."building_name", OLD."city", OLD."country_code", OLD."county", OLD."court_id", OLD."court_seat", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."state", OLD."zip_code"); RETURN NULL;',
                    hash="4bc49bfad632207bc23d2920130608dca8708df0",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_6f488",
                    table="search_courthouse",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docket",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."appeal_from_id" IS DISTINCT FROM (NEW."appeal_from_id") OR OLD."appeal_from_str" IS DISTINCT FROM (NEW."appeal_from_str") OR OLD."appellate_case_type_information" IS DISTINCT FROM (NEW."appellate_case_type_information") OR OLD."appellate_fee_status" IS DISTINCT FROM (NEW."appellate_fee_status") OR OLD."assigned_to_id" IS DISTINCT FROM (NEW."assigned_to_id") OR OLD."assigned_to_str" IS DISTINCT FROM (NEW."assigned_to_str") OR OLD."blocked" IS DISTINCT FROM (NEW."blocked") OR OLD."case_name" IS DISTINCT FROM (NEW."case_name") OR OLD."case_name_full" IS DISTINCT FROM (NEW."case_name_full") OR OLD."case_name_short" IS DISTINCT FROM (NEW."case_name_short") OR OLD."cause" IS DISTINCT FROM (NEW."cause") OR OLD."court_id" IS DISTINCT FROM (NEW."court_id") OR OLD."date_argued" IS DISTINCT FROM (NEW."date_argued") OR OLD."date_blocked" IS DISTINCT FROM (NEW."date_blocked") OR OLD."date_cert_denied" IS DISTINCT FROM (NEW."date_cert_denied") OR OLD."date_cert_granted" IS DISTINCT FROM (NEW."date_cert_granted") OR OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."date_last_filing" IS DISTINCT FROM (NEW."date_last_filing") OR OLD."date_last_index" IS DISTINCT FROM (NEW."date_last_index") OR OLD."date_reargued" IS DISTINCT FROM (NEW."date_reargued") OR OLD."date_reargument_denied" IS DISTINCT FROM (NEW."date_reargument_denied") OR OLD."date_terminated" IS DISTINCT FROM (NEW."date_terminated") OR OLD."docket_number" IS DISTINCT FROM (NEW."docket_number") OR OLD."docket_number_core" IS DISTINCT FROM (NEW."docket_number_core") OR OLD."federal_defendant_number" IS DISTINCT FROM (NEW."federal_defendant_number") OR OLD."federal_dn_case_type" IS DISTINCT FROM (NEW."federal_dn_case_type") OR OLD."federal_dn_judge_initials_assigned" IS DISTINCT FROM (NEW."federal_dn_judge_initials_assigned") OR OLD."federal_dn_judge_initials_referred" IS DISTINCT FROM (NEW."federal_dn_judge_initials_referred") OR OLD."federal_dn_office_code" IS DISTINCT FROM (NEW."federal_dn_office_code") OR OLD."filepath_ia" IS DISTINCT FROM (NEW."filepath_ia") OR OLD."filepath_ia_json" IS DISTINCT FROM (NEW."filepath_ia_json") OR OLD."filepath_local" IS DISTINCT FROM (NEW."filepath_local") OR OLD."ia_date_first_change" IS DISTINCT FROM (NEW."ia_date_first_change") OR OLD."ia_needs_upload" IS DISTINCT FROM (NEW."ia_needs_upload") OR OLD."ia_upload_failure_count" IS DISTINCT FROM (NEW."ia_upload_failure_count") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."idb_data_id" IS DISTINCT FROM (NEW."idb_data_id") OR OLD."jurisdiction_type" IS DISTINCT FROM (NEW."jurisdiction_type") OR OLD."jury_demand" IS DISTINCT FROM (NEW."jury_demand") OR OLD."mdl_status" IS DISTINCT FROM (NEW."mdl_status") OR OLD."nature_of_suit" IS DISTINCT FROM (NEW."nature_of_suit") OR OLD."originating_court_information_id" IS DISTINCT FROM (NEW."originating_court_information_id") OR OLD."pacer_case_id" IS DISTINCT FROM (NEW."pacer_case_id") OR OLD."panel_str" IS DISTINCT FROM (NEW."panel_str") OR OLD."parent_docket_id" IS DISTINCT FROM (NEW."parent_docket_id") OR OLD."referred_to_id" IS DISTINCT FROM (NEW."referred_to_id") OR OLD."referred_to_str" IS DISTINCT FROM (NEW."referred_to_str") OR OLD."slug" IS DISTINCT FROM (NEW."slug") OR OLD."source" IS DISTINCT FROM (NEW."source"))',
                    func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "docket_number", "docket_number_core", "federal_defendant_number", "federal_dn_case_type", "federal_dn_judge_initials_assigned", "federal_dn_judge_initials_referred", "federal_dn_office_code", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "originating_court_information_id", "pacer_case_id", "panel_str", "parent_docket_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (OLD."appeal_from_id", OLD."appeal_from_str", OLD."appellate_case_type_information", OLD."appellate_fee_status", OLD."assigned_to_id", OLD."assigned_to_str", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."cause", OLD."court_id", OLD."date_argued", OLD."date_blocked", OLD."date_cert_denied", OLD."date_cert_granted", OLD."date_created", OLD."date_filed", OLD."date_last_filing", OLD."date_last_index", OLD."date_modified", OLD."date_reargued", OLD."date_reargument_denied", OLD."date_terminated", OLD."docket_number", OLD."docket_number_core", OLD."federal_defendant_number", OLD."federal_dn_case_type", OLD."federal_dn_judge_initials_assigned", OLD."federal_dn_judge_initials_referred", OLD."federal_dn_office_code", OLD."filepath_ia", OLD."filepath_ia_json", OLD."filepath_local", OLD."ia_date_first_change", OLD."ia_needs_upload", OLD."ia_upload_failure_count", OLD."id", OLD."idb_data_id", OLD."jurisdiction_type", OLD."jury_demand", OLD."mdl_status", OLD."nature_of_suit", OLD."originating_court_information_id", OLD."pacer_case_id", OLD."panel_str", OLD."parent_docket_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."referred_to_id", OLD."referred_to_str", OLD."slug", OLD."source"); RETURN NULL;',
                    hash="58cfc45ca31f1c762b2b4142f134519cd4cd3472",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_068f7",
                    table="search_docket",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docket",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketevent" ("appeal_from_id", "appeal_from_str", "appellate_case_type_information", "appellate_fee_status", "assigned_to_id", "assigned_to_str", "blocked", "case_name", "case_name_full", "case_name_short", "cause", "court_id", "date_argued", "date_blocked", "date_cert_denied", "date_cert_granted", "date_created", "date_filed", "date_last_filing", "date_last_index", "date_modified", "date_reargued", "date_reargument_denied", "date_terminated", "docket_number", "docket_number_core", "federal_defendant_number", "federal_dn_case_type", "federal_dn_judge_initials_assigned", "federal_dn_judge_initials_referred", "federal_dn_office_code", "filepath_ia", "filepath_ia_json", "filepath_local", "ia_date_first_change", "ia_needs_upload", "ia_upload_failure_count", "id", "idb_data_id", "jurisdiction_type", "jury_demand", "mdl_status", "nature_of_suit", "originating_court_information_id", "pacer_case_id", "panel_str", "parent_docket_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referred_to_id", "referred_to_str", "slug", "source") VALUES (OLD."appeal_from_id", OLD."appeal_from_str", OLD."appellate_case_type_information", OLD."appellate_fee_status", OLD."assigned_to_id", OLD."assigned_to_str", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."cause", OLD."court_id", OLD."date_argued", OLD."date_blocked", OLD."date_cert_denied", OLD."date_cert_granted", OLD."date_created", OLD."date_filed", OLD."date_last_filing", OLD."date_last_index", OLD."date_modified", OLD."date_reargued", OLD."date_reargument_denied", OLD."date_terminated", OLD."docket_number", OLD."docket_number_core", OLD."federal_defendant_number", OLD."federal_dn_case_type", OLD."federal_dn_judge_initials_assigned", OLD."federal_dn_judge_initials_referred", OLD."federal_dn_office_code", OLD."filepath_ia", OLD."filepath_ia_json", OLD."filepath_local", OLD."ia_date_first_change", OLD."ia_needs_upload", OLD."ia_upload_failure_count", OLD."id", OLD."idb_data_id", OLD."jurisdiction_type", OLD."jury_demand", OLD."mdl_status", OLD."nature_of_suit", OLD."originating_court_information_id", OLD."pacer_case_id", OLD."panel_str", OLD."parent_docket_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."referred_to_id", OLD."referred_to_str", OLD."slug", OLD."source"); RETURN NULL;',
                    hash="120d2ce6f53809c06f51a3a2793caa88ae883fdf",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_7303c",
                    table="search_docket",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketentry",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."description" IS DISTINCT FROM (NEW."description") OR OLD."docket_id" IS DISTINCT FROM (NEW."docket_id") OR OLD."entry_number" IS DISTINCT FROM (NEW."entry_number") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."pacer_sequence_number" IS DISTINCT FROM (NEW."pacer_sequence_number") OR OLD."recap_sequence_number" IS DISTINCT FROM (NEW."recap_sequence_number") OR OLD."time_filed" IS DISTINCT FROM (NEW."time_filed"))',
                    func='INSERT INTO "search_docketentryevent" ("date_created", "date_filed", "date_modified", "description", "docket_id", "entry_number", "id", "pacer_sequence_number", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_sequence_number", "time_filed") VALUES (OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."description", OLD."docket_id", OLD."entry_number", OLD."id", OLD."pacer_sequence_number", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."recap_sequence_number", OLD."time_filed"); RETURN NULL;',
                    hash="ed2f98d6230e1dd82d65afb1f1abe2c4046b825c",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_75874",
                    table="search_docketentry",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketentry",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketentryevent" ("date_created", "date_filed", "date_modified", "description", "docket_id", "entry_number", "id", "pacer_sequence_number", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "recap_sequence_number", "time_filed") VALUES (OLD."date_created", OLD."date_filed", OLD."date_modified", OLD."description", OLD."docket_id", OLD."entry_number", OLD."id", OLD."pacer_sequence_number", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."recap_sequence_number", OLD."time_filed"); RETURN NULL;',
                    hash="d646f9ed3424d3546c8f737e0e073709738c27e2",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_9164f",
                    table="search_docketentry",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketentrytags",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketentrytagsevent" ("docketentry_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."docketentry_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."tag_id"); RETURN NULL;',
                    hash="185b8a2987d24ec31c16de067f97c62eeaf19a9e",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_7ff94",
                    table="search_docketentry_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketentrytags",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketentrytagsevent" ("docketentry_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."docketentry_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."tag_id"); RETURN NULL;',
                    hash="ed4129077b3c45887dac263537ecd4a450f88ab0",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_88ce1",
                    table="search_docketentry_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketpanel",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketpanelevent" ("docket_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."docket_id", NEW."id", NEW."person_id", _pgh_attach_context(), NOW(), \'insert\'); RETURN NULL;',
                    hash="c0f9ae543d453f72d0dce467dc71d162de5c7af7",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_500ff",
                    table="search_docket_panel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="docketpanel",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_docketpanelevent" ("docket_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."docket_id", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\'); RETURN NULL;',
                    hash="3b9214ac483e51ed53a6c0586e31525e8d31b7d2",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_e4921",
                    table="search_docket_panel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="dockettags",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_dockettagsevent" ("docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (NEW."docket_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."tag_id"); RETURN NULL;',
                    hash="7774b046bc2f0071312ab81e910b1e58f12fd865",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_acaec",
                    table="search_docket_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="dockettags",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_dockettagsevent" ("docket_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "tag_id") VALUES (OLD."docket_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."tag_id"); RETURN NULL;',
                    hash="cda059d1986a3d69571e71dd3b5f5c8f6f938e95",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_226b5",
                    table="search_docket_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinion",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."author_id" IS DISTINCT FROM (NEW."author_id") OR OLD."author_str" IS DISTINCT FROM (NEW."author_str") OR OLD."cluster_id" IS DISTINCT FROM (NEW."cluster_id") OR OLD."download_url" IS DISTINCT FROM (NEW."download_url") OR OLD."extracted_by_ocr" IS DISTINCT FROM (NEW."extracted_by_ocr") OR OLD."html" IS DISTINCT FROM (NEW."html") OR OLD."html_anon_2020" IS DISTINCT FROM (NEW."html_anon_2020") OR OLD."html_columbia" IS DISTINCT FROM (NEW."html_columbia") OR OLD."html_lawbox" IS DISTINCT FROM (NEW."html_lawbox") OR OLD."html_with_citations" IS DISTINCT FROM (NEW."html_with_citations") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."joined_by_str" IS DISTINCT FROM (NEW."joined_by_str") OR OLD."local_path" IS DISTINCT FROM (NEW."local_path") OR OLD."ordering_key" IS DISTINCT FROM (NEW."ordering_key") OR OLD."page_count" IS DISTINCT FROM (NEW."page_count") OR OLD."per_curiam" IS DISTINCT FROM (NEW."per_curiam") OR OLD."plain_text" IS DISTINCT FROM (NEW."plain_text") OR OLD."sha1" IS DISTINCT FROM (NEW."sha1") OR OLD."type" IS DISTINCT FROM (NEW."type") OR OLD."xml_harvard" IS DISTINCT FROM (NEW."xml_harvard"))',
                    func='INSERT INTO "search_opinionevent" ("author_id", "author_str", "cluster_id", "date_created", "date_modified", "download_url", "extracted_by_ocr", "html", "html_anon_2020", "html_columbia", "html_lawbox", "html_with_citations", "id", "joined_by_str", "local_path", "ordering_key", "page_count", "per_curiam", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "type", "xml_harvard") VALUES (OLD."author_id", OLD."author_str", OLD."cluster_id", OLD."date_created", OLD."date_modified", OLD."download_url", OLD."extracted_by_ocr", OLD."html", OLD."html_anon_2020", OLD."html_columbia", OLD."html_lawbox", OLD."html_with_citations", OLD."id", OLD."joined_by_str", OLD."local_path", OLD."ordering_key", OLD."page_count", OLD."per_curiam", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."plain_text", OLD."sha1", OLD."type", OLD."xml_harvard"); RETURN NULL;',
                    hash="1cd7e11bdf869c8c34914b5ef4e8f15d9f28866b",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_24107",
                    table="search_opinion",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinion",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionevent" ("author_id", "author_str", "cluster_id", "date_created", "date_modified", "download_url", "extracted_by_ocr", "html", "html_anon_2020", "html_columbia", "html_lawbox", "html_with_citations", "id", "joined_by_str", "local_path", "ordering_key", "page_count", "per_curiam", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "type", "xml_harvard") VALUES (OLD."author_id", OLD."author_str", OLD."cluster_id", OLD."date_created", OLD."date_modified", OLD."download_url", OLD."extracted_by_ocr", OLD."html", OLD."html_anon_2020", OLD."html_columbia", OLD."html_lawbox", OLD."html_with_citations", OLD."id", OLD."joined_by_str", OLD."local_path", OLD."ordering_key", OLD."page_count", OLD."per_curiam", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."plain_text", OLD."sha1", OLD."type", OLD."xml_harvard"); RETURN NULL;',
                    hash="978d3c48a0e531c7d74088c973fd529230b95678",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_613d8",
                    table="search_opinion",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinioncluster",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."arguments" IS DISTINCT FROM (NEW."arguments") OR OLD."attorneys" IS DISTINCT FROM (NEW."attorneys") OR OLD."blocked" IS DISTINCT FROM (NEW."blocked") OR OLD."case_name" IS DISTINCT FROM (NEW."case_name") OR OLD."case_name_full" IS DISTINCT FROM (NEW."case_name_full") OR OLD."case_name_short" IS DISTINCT FROM (NEW."case_name_short") OR OLD."citation_count" IS DISTINCT FROM (NEW."citation_count") OR OLD."correction" IS DISTINCT FROM (NEW."correction") OR OLD."cross_reference" IS DISTINCT FROM (NEW."cross_reference") OR OLD."date_blocked" IS DISTINCT FROM (NEW."date_blocked") OR OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."date_filed_is_approximate" IS DISTINCT FROM (NEW."date_filed_is_approximate") OR OLD."disposition" IS DISTINCT FROM (NEW."disposition") OR OLD."docket_id" IS DISTINCT FROM (NEW."docket_id") OR OLD."filepath_json_harvard" IS DISTINCT FROM (NEW."filepath_json_harvard") OR OLD."filepath_pdf_harvard" IS DISTINCT FROM (NEW."filepath_pdf_harvard") OR OLD."headmatter" IS DISTINCT FROM (NEW."headmatter") OR OLD."headnotes" IS DISTINCT FROM (NEW."headnotes") OR OLD."history" IS DISTINCT FROM (NEW."history") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."judges" IS DISTINCT FROM (NEW."judges") OR OLD."nature_of_suit" IS DISTINCT FROM (NEW."nature_of_suit") OR OLD."other_dates" IS DISTINCT FROM (NEW."other_dates") OR OLD."posture" IS DISTINCT FROM (NEW."posture") OR OLD."precedential_status" IS DISTINCT FROM (NEW."precedential_status") OR OLD."procedural_history" IS DISTINCT FROM (NEW."procedural_history") OR OLD."scdb_decision_direction" IS DISTINCT FROM (NEW."scdb_decision_direction") OR OLD."scdb_id" IS DISTINCT FROM (NEW."scdb_id") OR OLD."scdb_votes_majority" IS DISTINCT FROM (NEW."scdb_votes_majority") OR OLD."scdb_votes_minority" IS DISTINCT FROM (NEW."scdb_votes_minority") OR OLD."slug" IS DISTINCT FROM (NEW."slug") OR OLD."source" IS DISTINCT FROM (NEW."source") OR OLD."summary" IS DISTINCT FROM (NEW."summary") OR OLD."syllabus" IS DISTINCT FROM (NEW."syllabus"))',
                    func='INSERT INTO "search_opinionclusterevent" ("arguments", "attorneys", "blocked", "case_name", "case_name_full", "case_name_short", "citation_count", "correction", "cross_reference", "date_blocked", "date_created", "date_filed", "date_filed_is_approximate", "date_modified", "disposition", "docket_id", "filepath_json_harvard", "filepath_pdf_harvard", "headmatter", "headnotes", "history", "id", "judges", "nature_of_suit", "other_dates", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "posture", "precedential_status", "procedural_history", "scdb_decision_direction", "scdb_id", "scdb_votes_majority", "scdb_votes_minority", "slug", "source", "summary", "syllabus") VALUES (OLD."arguments", OLD."attorneys", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."citation_count", OLD."correction", OLD."cross_reference", OLD."date_blocked", OLD."date_created", OLD."date_filed", OLD."date_filed_is_approximate", OLD."date_modified", OLD."disposition", OLD."docket_id", OLD."filepath_json_harvard", OLD."filepath_pdf_harvard", OLD."headmatter", OLD."headnotes", OLD."history", OLD."id", OLD."judges", OLD."nature_of_suit", OLD."other_dates", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."posture", OLD."precedential_status", OLD."procedural_history", OLD."scdb_decision_direction", OLD."scdb_id", OLD."scdb_votes_majority", OLD."scdb_votes_minority", OLD."slug", OLD."source", OLD."summary", OLD."syllabus"); RETURN NULL;',
                    hash="bfad11f5f83c529116ba7ce9b0ed06aac2b5acb5",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_c83f1",
                    table="search_opinioncluster",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinioncluster",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionclusterevent" ("arguments", "attorneys", "blocked", "case_name", "case_name_full", "case_name_short", "citation_count", "correction", "cross_reference", "date_blocked", "date_created", "date_filed", "date_filed_is_approximate", "date_modified", "disposition", "docket_id", "filepath_json_harvard", "filepath_pdf_harvard", "headmatter", "headnotes", "history", "id", "judges", "nature_of_suit", "other_dates", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "posture", "precedential_status", "procedural_history", "scdb_decision_direction", "scdb_id", "scdb_votes_majority", "scdb_votes_minority", "slug", "source", "summary", "syllabus") VALUES (OLD."arguments", OLD."attorneys", OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."citation_count", OLD."correction", OLD."cross_reference", OLD."date_blocked", OLD."date_created", OLD."date_filed", OLD."date_filed_is_approximate", OLD."date_modified", OLD."disposition", OLD."docket_id", OLD."filepath_json_harvard", OLD."filepath_pdf_harvard", OLD."headmatter", OLD."headnotes", OLD."history", OLD."id", OLD."judges", OLD."nature_of_suit", OLD."other_dates", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."posture", OLD."precedential_status", OLD."procedural_history", OLD."scdb_decision_direction", OLD."scdb_id", OLD."scdb_votes_majority", OLD."scdb_votes_minority", OLD."slug", OLD."source", OLD."summary", OLD."syllabus"); RETURN NULL;',
                    hash="16c973181b7fa4c3c77e7b854998db6763fab7bd",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_a8516",
                    table="search_opinioncluster",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionclusternonparticipatingjudges",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionclusternonparticipatingjudgesevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinioncluster_id", NEW."person_id", _pgh_attach_context(), NOW(), \'insert\'); RETURN NULL;',
                    hash="6515eb33fbf31d00fd2e3fdb3051e381a31fdc19",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_d401c",
                    table="search_opinioncluster_non_participating_judges",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionclusternonparticipatingjudges",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionclusternonparticipatingjudgesevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinioncluster_id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\'); RETURN NULL;',
                    hash="c0a73b419c24b7969bd3dd589ffbb760db1e0e1d",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_2bcae",
                    table="search_opinioncluster_non_participating_judges",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionclusterpanel",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionclusterpanelevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinioncluster_id", NEW."person_id", _pgh_attach_context(), NOW(), \'insert\'); RETURN NULL;',
                    hash="fa3013dd91633b3a4e2fb434fcda5b989e74668a",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_76236",
                    table="search_opinioncluster_panel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionclusterpanel",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionclusterpanelevent" ("id", "opinioncluster_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinioncluster_id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\'); RETURN NULL;',
                    hash="8f1743d545986edd98887671ade6ea7a7ddf1828",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_5a6ce",
                    table="search_opinioncluster_panel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionjoinedby",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionjoinedbyevent" ("id", "opinion_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."id", NEW."opinion_id", NEW."person_id", _pgh_attach_context(), NOW(), \'insert\'); RETURN NULL;',
                    hash="2379eca94d4a3eaa064f56dd27da60a20f6859a9",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_c144b",
                    table="search_opinion_joined_by",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="opinionjoinedby",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_opinionjoinedbyevent" ("id", "opinion_id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."id", OLD."opinion_id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\'); RETURN NULL;',
                    hash="137440463b89d04d25fd8304c7f40b76896a99b1",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_243ae",
                    table="search_opinion_joined_by",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="originatingcourtinformation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."assigned_to_id" IS DISTINCT FROM (NEW."assigned_to_id") OR OLD."assigned_to_str" IS DISTINCT FROM (NEW."assigned_to_str") OR OLD."court_reporter" IS DISTINCT FROM (NEW."court_reporter") OR OLD."date_disposed" IS DISTINCT FROM (NEW."date_disposed") OR OLD."date_filed" IS DISTINCT FROM (NEW."date_filed") OR OLD."date_filed_noa" IS DISTINCT FROM (NEW."date_filed_noa") OR OLD."date_judgment" IS DISTINCT FROM (NEW."date_judgment") OR OLD."date_judgment_eod" IS DISTINCT FROM (NEW."date_judgment_eod") OR OLD."date_received_coa" IS DISTINCT FROM (NEW."date_received_coa") OR OLD."docket_number" IS DISTINCT FROM (NEW."docket_number") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."ordering_judge_id" IS DISTINCT FROM (NEW."ordering_judge_id") OR OLD."ordering_judge_str" IS DISTINCT FROM (NEW."ordering_judge_str"))',
                    func='INSERT INTO "search_originatingcourtinformationevent" ("assigned_to_id", "assigned_to_str", "court_reporter", "date_created", "date_disposed", "date_filed", "date_filed_noa", "date_judgment", "date_judgment_eod", "date_modified", "date_received_coa", "docket_number", "id", "ordering_judge_id", "ordering_judge_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."assigned_to_id", OLD."assigned_to_str", OLD."court_reporter", OLD."date_created", OLD."date_disposed", OLD."date_filed", OLD."date_filed_noa", OLD."date_judgment", OLD."date_judgment_eod", OLD."date_modified", OLD."date_received_coa", OLD."docket_number", OLD."id", OLD."ordering_judge_id", OLD."ordering_judge_str", _pgh_attach_context(), NOW(), \'update\', OLD."id"); RETURN NULL;',
                    hash="214da086cbf221209cfcc0f11c198f861c0c5d66",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_65b0a",
                    table="search_originatingcourtinformation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="originatingcourtinformation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_originatingcourtinformationevent" ("assigned_to_id", "assigned_to_str", "court_reporter", "date_created", "date_disposed", "date_filed", "date_filed_noa", "date_judgment", "date_judgment_eod", "date_modified", "date_received_coa", "docket_number", "id", "ordering_judge_id", "ordering_judge_str", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."assigned_to_id", OLD."assigned_to_str", OLD."court_reporter", OLD."date_created", OLD."date_disposed", OLD."date_filed", OLD."date_filed_noa", OLD."date_judgment", OLD."date_judgment_eod", OLD."date_modified", OLD."date_received_coa", OLD."docket_number", OLD."id", OLD."ordering_judge_id", OLD."ordering_judge_str", _pgh_attach_context(), NOW(), \'delete\', OLD."id"); RETURN NULL;',
                    hash="f6e06aaefc29481bb4ca1c5e327e552ba4455410",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_ea96d",
                    table="search_originatingcourtinformation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="recapdocument",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."acms_document_guid" IS DISTINCT FROM (NEW."acms_document_guid") OR OLD."attachment_number" IS DISTINCT FROM (NEW."attachment_number") OR OLD."date_upload" IS DISTINCT FROM (NEW."date_upload") OR OLD."description" IS DISTINCT FROM (NEW."description") OR OLD."docket_entry_id" IS DISTINCT FROM (NEW."docket_entry_id") OR OLD."document_number" IS DISTINCT FROM (NEW."document_number") OR OLD."document_type" IS DISTINCT FROM (NEW."document_type") OR OLD."file_size" IS DISTINCT FROM (NEW."file_size") OR OLD."filepath_ia" IS DISTINCT FROM (NEW."filepath_ia") OR OLD."filepath_local" IS DISTINCT FROM (NEW."filepath_local") OR OLD."ia_upload_failure_count" IS DISTINCT FROM (NEW."ia_upload_failure_count") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."is_available" IS DISTINCT FROM (NEW."is_available") OR OLD."is_free_on_pacer" IS DISTINCT FROM (NEW."is_free_on_pacer") OR OLD."is_sealed" IS DISTINCT FROM (NEW."is_sealed") OR OLD."ocr_status" IS DISTINCT FROM (NEW."ocr_status") OR OLD."pacer_doc_id" IS DISTINCT FROM (NEW."pacer_doc_id") OR OLD."page_count" IS DISTINCT FROM (NEW."page_count") OR OLD."plain_text" IS DISTINCT FROM (NEW."plain_text") OR OLD."sha1" IS DISTINCT FROM (NEW."sha1") OR OLD."thumbnail" IS DISTINCT FROM (NEW."thumbnail") OR OLD."thumbnail_status" IS DISTINCT FROM (NEW."thumbnail_status"))',
                    func='INSERT INTO "search_recapdocumentevent" ("acms_document_guid", "attachment_number", "date_created", "date_modified", "date_upload", "description", "docket_entry_id", "document_number", "document_type", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."acms_document_guid", OLD."attachment_number", OLD."date_created", OLD."date_modified", OLD."date_upload", OLD."description", OLD."docket_entry_id", OLD."document_number", OLD."document_type", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;',
                    hash="113a06aaa094dbffa4888d992f7a777c77f05bb0",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_af6ad",
                    table="search_recapdocument",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="recapdocument",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_recapdocumentevent" ("acms_document_guid", "attachment_number", "date_created", "date_modified", "date_upload", "description", "docket_entry_id", "document_number", "document_type", "file_size", "filepath_ia", "filepath_local", "ia_upload_failure_count", "id", "is_available", "is_free_on_pacer", "is_sealed", "ocr_status", "pacer_doc_id", "page_count", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plain_text", "sha1", "thumbnail", "thumbnail_status") VALUES (OLD."acms_document_guid", OLD."attachment_number", OLD."date_created", OLD."date_modified", OLD."date_upload", OLD."description", OLD."docket_entry_id", OLD."document_number", OLD."document_type", OLD."file_size", OLD."filepath_ia", OLD."filepath_local", OLD."ia_upload_failure_count", OLD."id", OLD."is_available", OLD."is_free_on_pacer", OLD."is_sealed", OLD."ocr_status", OLD."pacer_doc_id", OLD."page_count", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."plain_text", OLD."sha1", OLD."thumbnail", OLD."thumbnail_status"); RETURN NULL;',
                    hash="71e2e1d3b8eacab1d2386c0041629d81e3d99574",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_28a84",
                    table="search_recapdocument",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="recapdocumenttags",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_recapdocumenttagsevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "recapdocument_id", "tag_id") VALUES (NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."recapdocument_id", NEW."tag_id"); RETURN NULL;',
                    hash="01229805b26ca45fd9b236a2ef66a90f55eefe0c",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_b8d32",
                    table="search_recapdocument_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="recapdocumenttags",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_recapdocumenttagsevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "recapdocument_id", "tag_id") VALUES (OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."recapdocument_id", OLD."tag_id"); RETURN NULL;',
                    hash="9576bbbea9a821b0372c469ba523ad5064e33c31",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_fc2f8",
                    table="search_recapdocument_tags",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="tag",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name"))',
                    func='INSERT INTO "search_tagevent" ("date_created", "date_modified", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'update\', OLD."id"); RETURN NULL;',
                    hash="d3d07ab1b4071d9170731deb165320dcc220f4ab",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_f89d4",
                    table="search_tag",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="tag",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "search_tagevent" ("date_created", "date_modified", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'delete\', OLD."id"); RETURN NULL;',
                    hash="018ef845ef76126676f8b3d1c2c0a0fe0f660bbe",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_24781",
                    table="search_tag",
                    when="AFTER",
                ),
            ),
        ),
    ]
