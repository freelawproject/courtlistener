import os
from datetime import date

import sentry_sdk
from sentry_sdk.integrations.celery import CeleryIntegration
from sentry_sdk.integrations.django import DjangoIntegration
from sentry_sdk.integrations.logging import ignore_logger
from sentry_sdk.integrations.redis import RedisIntegration


##################
# Debug settings #
##################
DEBUG = True
# DEBUG can be set to True on any machine, but this is used to tune down
# resource consumption (SOLR, queryset iterator size, etc) on dev machines.
DEVELOPMENT = True

if DEVELOPMENT:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = ['127.0.0.1', '.courtlistener.com']


MANAGERS = (
   ('Joe Schmoe', 'joe@courtlistener.com'),
)


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'courtlistener',
        'USER': 'postgres',  # Use 'django' in prod
        'PASSWORD': 'postgres',
        'HOST': 'cl-postgresql',
        'CONN_MAX_AGE': 600,
    }
}
API_READ_DATABASES = ['replica']
MAX_REPLICATION_LAG = 1e+8  # 100MB

SOLR_HOST = 'http://cl-solr:8983'
SOLR_RECAP_HOST = SOLR_HOST
SOLR_PAGERANK_DEST_DIR = '/tmp/'

REDIS_HOST = 'cl-redis'
REDIS_PORT = 6379

DOCKER_SELENIUM_HOST = 'http://cl-selenium:4444/wd/hub'
DOCKER_DJANGO_HOST = 'cl-django'

SELENIUM_HEADLESS = False

# Make these unique, and don't share it with anybody.
SECRET_KEY = 'your-secret-key'


# Payment secrets
EIN_SECRET = ''  # The business tax ID.
if DEVELOPMENT:
    PAYMENT_TESTING_MODE = True
else:
    PAYMENT_TESTING_MODE = False
if PAYMENT_TESTING_MODE:
    PAYPAL_ENDPOINT = 'https://api.sandbox.paypal.com'
    PAYPAL_ACCOUNT = 'donate@free.law'
    PAYPAL_CLIENT_ID = ''
    PAYPAL_SECRET_KEY = ''
    STRIPE_SECRET_KEY = ''
    STRIPE_PUBLIC_KEY = ''
else:
    PAYPAL_ENDPOINT = 'https://api.paypal.com'
    PAYPAL_ACCOUNT = 'donate@free.law'
    PAYPAL_CLIENT_ID = ''
    PAYPAL_SECRET_KEY = ''
    STRIPE_SECRET_KEY = ''
    STRIPE_PUBLIC_KEY = ''

# Key for Follow the Money API
FTM_KEY = ''
FTM_LAST_UPDATED = date.today()

# Internet Archive
IA_ACCESS_KEY = ''
IA_SECRET_KEY = ''
IA_COLLECTIONS = []
IA_OA_COLLECTIONS = ['uscourtsoralargumentsdev']


# Mailchimp secret (used for webhook URLs)
MAILCHIMP_SECRET = ''
MAILCHIMP_API_KEY = ''

# Matomo token (used for reporting API)
MATOMO_TOKEN = ''

# PACER
PACER_USERNAME = ''
PACER_PASSWORD = ''

#LASC MAP
LASC_USERNAME = ''
LASC_PASSWORD = ''

here = os.path.dirname(os.path.realpath(__file__))
GOOGLE_AUTH = {
    'PATH': os.path.join(here, 'google_auth.json'),
    'PROJECT': 'courtlistener-development',
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/Los_Angeles'

FUNDRAISING_MODE = False

AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''

AWS_LAMBDA_PROXY_URL = 'https://xxx.execute-api.us-west-2.amazonaws.com/v1/get'

# Development credentials available upon request

BTE_HOST = "http://cl-binary-transformers-and-extractors:5050"


##########
# Sentry #
##########
# IA's library logs a lot of errors, which get sent to sentry unnecessarily
# If you work closely with FLP, uncomment this to send your dev errors to
# sentry. If you don't work closely with us, you won't have a Sentry username,
# and you can send your dev errors to Sentry, but there's no point. This is
# commented by default so that developers don't send things to Sentry that they
# wouldn't expect to.
#ignore_logger("internetarchive.session")
#ignore_logger("internetarchive.item")
#sentry_sdk.init(
#    dsn="https://7743724ec68e4249a3fc48fc28fe312c@o399720.ingest.sentry.io/5620212",
#    integrations=[
#        CeleryIntegration(),
#        DjangoIntegration(),
#        RedisIntegration(),
#    ],
#    ignore_errors=[KeyboardInterrupt],
#)
