# Generated by Django 5.0.8 on 2024-09-10 17:57

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0014_remove_wants_newsletter_field_from_userprofile"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="grouppermissions",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="grouppermissions",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="groupproxy",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="groupproxy",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="permissionproxy",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="permissionproxy",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usergroups",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usergroups",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userpermissions",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userpermissions",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userprofile",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userprofile",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userprofilebarmembership",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userprofilebarmembership",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userproxy",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="userproxy",
            name="update_or_delete_snapshot_delete",
        ),
        migrations.AlterField(
            model_name="groupproxyevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="users.groupproxy",
            ),
        ),
        migrations.AlterField(
            model_name="permissionproxyevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="users.permissionproxy",
            ),
        ),
        migrations.AlterField(
            model_name="userprofileevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="users.userprofile",
            ),
        ),
        migrations.AlterField(
            model_name="userproxyevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="pgh_events",
                related_query_name="pgh_events_query",
                to="users.userproxy",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="grouppermissions",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_grouppermissionsevent" ("group_id", "id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (NEW."group_id", NEW."id", NEW."permission_id", _pgh_attach_context(), NOW(), \'insert\'); RETURN NULL;',
                    hash="91e39e8055bfbf9f27d4edab1ba2db336b734ad9",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_0508e",
                    table="auth_group_permissions",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="grouppermissions",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_grouppermissionsevent" ("group_id", "id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."group_id", OLD."id", OLD."permission_id", _pgh_attach_context(), NOW(), \'delete\'); RETURN NULL;',
                    hash="fad7d97b452fc2ae96300b490f7f45b24ebd6810",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_e362a",
                    table="auth_group_permissions",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="groupproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "users_groupproxyevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'update\', OLD."id"); RETURN NULL;',
                    hash="52c4d6a7c9d333e93eb8d4963914618c6f225c74",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_3d425",
                    table="auth_group",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="groupproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_groupproxyevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'delete\', OLD."id"); RETURN NULL;',
                    hash="676a1306d9acbb44187e1101c66e510203f8812e",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_dc02e",
                    table="auth_group",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="permissionproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "users_permissionproxyevent" ("codename", "content_type_id", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."codename", OLD."content_type_id", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'update\', OLD."id"); RETURN NULL;',
                    hash="34ed926700a0931165e641837c0f3d1b9e04fbd8",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_3d7b6",
                    table="auth_permission",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="permissionproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_permissionproxyevent" ("codename", "content_type_id", "id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."codename", OLD."content_type_id", OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'delete\', OLD."id"); RETURN NULL;',
                    hash="98dae95945c6031d09ad6a8e3810549139843d82",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_8f5b2",
                    table="auth_permission",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="usergroups",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_usergroupsevent" ("group_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (NEW."group_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."user_id"); RETURN NULL;',
                    hash="96af2c4391b2aff92ad1996dc0fc119bbd872749",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_a0f5f",
                    table="auth_user_groups",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="usergroups",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_usergroupsevent" ("group_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (OLD."group_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."user_id"); RETURN NULL;',
                    hash="666e131c802a2a2d8403861e11ffa1177b58af8f",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_a75af",
                    table="auth_user_groups",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userpermissions",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userpermissionsevent" ("id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (NEW."id", NEW."permission_id", _pgh_attach_context(), NOW(), \'insert\', NEW."user_id"); RETURN NULL;',
                    hash="675b3ad75efe8988efa5082a620050daa54b041a",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_3aef8",
                    table="auth_user_user_permissions",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userpermissions",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userpermissionsevent" ("id", "permission_id", "pgh_context_id", "pgh_created_at", "pgh_label", "user_id") VALUES (OLD."id", OLD."permission_id", _pgh_attach_context(), NOW(), \'delete\', OLD."user_id"); RETURN NULL;',
                    hash="e4d40dff2f45ac81d8f49c631ea1a85bfae7eec5",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_5fbc8",
                    table="auth_user_user_permissions",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "users_userprofileevent" ("activation_key", "address1", "address2", "auto_subscribe", "avatar", "city", "docket_default_order_desc", "email_confirmed", "employer", "id", "is_tester", "key_expires", "neon_account_id", "notes", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plaintext_preferred", "recap_email", "state", "stub_account", "unlimited_docket_alerts", "user_id", "zip_code") VALUES (OLD."activation_key", OLD."address1", OLD."address2", OLD."auto_subscribe", OLD."avatar", OLD."city", OLD."docket_default_order_desc", OLD."email_confirmed", OLD."employer", OLD."id", OLD."is_tester", OLD."key_expires", OLD."neon_account_id", OLD."notes", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."plaintext_preferred", OLD."recap_email", OLD."state", OLD."stub_account", OLD."unlimited_docket_alerts", OLD."user_id", OLD."zip_code"); RETURN NULL;',
                    hash="6f3aaded8ebd9b60568627f977fdabec51af45eb",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_52a36",
                    table="users_userprofile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userprofileevent" ("activation_key", "address1", "address2", "auto_subscribe", "avatar", "city", "docket_default_order_desc", "email_confirmed", "employer", "id", "is_tester", "key_expires", "neon_account_id", "notes", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "plaintext_preferred", "recap_email", "state", "stub_account", "unlimited_docket_alerts", "user_id", "zip_code") VALUES (OLD."activation_key", OLD."address1", OLD."address2", OLD."auto_subscribe", OLD."avatar", OLD."city", OLD."docket_default_order_desc", OLD."email_confirmed", OLD."employer", OLD."id", OLD."is_tester", OLD."key_expires", OLD."neon_account_id", OLD."notes", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."plaintext_preferred", OLD."recap_email", OLD."state", OLD."stub_account", OLD."unlimited_docket_alerts", OLD."user_id", OLD."zip_code"); RETURN NULL;',
                    hash="5823ea4c4c240cf86c92fabf354466925e3dda70",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_4530f",
                    table="users_userprofile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userprofilebarmembership",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userprofilebarmembershipevent" ("barmembership_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "userprofile_id") VALUES (NEW."barmembership_id", NEW."id", _pgh_attach_context(), NOW(), \'insert\', NEW."userprofile_id"); RETURN NULL;',
                    hash="4074a349898d293109cffb45135cf21fd48c5d55",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_82729",
                    table="users_userprofile_barmembership",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userprofilebarmembership",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userprofilebarmembershipevent" ("barmembership_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "userprofile_id") VALUES (OLD."barmembership_id", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."userprofile_id"); RETURN NULL;',
                    hash="566aa4c2667ae05b60572e16092724c99d90977e",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_c97d5",
                    table="users_userprofile_barmembership",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "users_userproxyevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "username") VALUES (OLD."date_joined", OLD."email", OLD."first_name", OLD."id", OLD."is_active", OLD."is_staff", OLD."is_superuser", OLD."last_login", OLD."last_name", OLD."password", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."username"); RETURN NULL;',
                    hash="e1aa94d7ef3a0b69fe4d61aa3cbbf09cf9ad77cb",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_712fb",
                    table="auth_user",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="userproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "users_userproxyevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "username") VALUES (OLD."date_joined", OLD."email", OLD."first_name", OLD."id", OLD."is_active", OLD."is_staff", OLD."is_superuser", OLD."last_login", OLD."last_name", OLD."password", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."username"); RETURN NULL;',
                    hash="11d2d376a025becffad84a761be3c24bffebd746",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_e9da0",
                    table="auth_user",
                    when="AFTER",
                ),
            ),
        ),
    ]
