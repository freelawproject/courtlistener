# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-08-19 16:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [

        migrations.CreateModel(
            name='CaseInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.TextField(blank=True, help_text=b'Internal Case ID', null=True)),
                ('case_number', models.CharField(help_text=b'Court Case Number', max_length=30)),
                ('disposition_type', models.TextField(blank=True, null=True)),
                ('disposition_type_code', models.TextField(blank=True, null=True)),
                ('filing_date', models.DateField(blank=True, help_text=b'The date the case was filed as a Date', null=True)),
                ('filing_date_string', models.TextField(blank=True, help_text=b'The date the case was filed as a String', null=True)),
                ('disposition_date', models.DateField(blank=True, help_text=b'The date the case was disposed by the court as a Date', null=True)),
                ('disposition_date_string', models.TextField(blank=True, help_text=b'The date the case was disposed by the court as a String', null=True)),
                ('district', models.CharField(help_text=b'District is a 2-3 character code representing court locations; For Example BUR means Burbank', max_length=10)),
                ('case_type_description', models.TextField(help_text=b'Case Type Description')),
                ('case_type_code', models.CharField(help_text=b'Case Type Code', max_length=5)),
                ('case_title', models.TextField(help_text=b'Case Title')),
                ('division_code', models.CharField(help_text=b'Division', max_length=10)),
                ('judge_code', models.CharField(blank=True, help_text=b'Internal Jude Code assigned to the case', max_length=10, null=True)),
                ('judicial_officer', models.TextField(blank=True, help_text=b'The judge that the case was assigned to, as a string', null=True)),
                ('courthouse', models.TextField(help_text=b'The courthouse name', max_length=50)),
                ('case_type', models.IntegerField(blank=True, help_text=b'Case Type Code', null=True)),
                ('status', models.TextField(blank=True, help_text=b'The status of the case, as a string', null=True)),
                ('status_date', models.TextField(blank=True, help_text=b'Date status was updated as a string', null=True)),
                ('status_code', models.TextField(blank=True, help_text=b'Court Status Code associated with current status', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
            ],
        ),
        migrations.CreateModel(
            name='CrossReferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cross_reference_date_string', models.TextField(help_text=b'Cross Reference date as a String', null=True)),
                ('cross_reference_date', models.DateTimeField(help_text=b'Cross reference date as a Date Object', null=True)),
                ('cross_reference_case_number', models.TextField(help_text=b'Cross Reference Case Number', null=True)),
                ('cross_reference_type_description', models.TextField(help_text=b'Cross Reference short description', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
            ],
        ),
        migrations.CreateModel(
            name='Docket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.CharField(help_text=b'Internal Case ID = {Combination of Case Number; District; Division Code}', max_length=30)),
                ('full_data_model', models.BooleanField(default=False, help_text=b'Indicates if the case has been scraped beyond Basic Date Search information')),
                ('date_checked', models.DateTimeField(blank=True, help_text=b'Datetime case was last checked', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('case_hash', models.CharField(help_text=b'SHA1 Hash of the returned JSON', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_count', models.IntegerField(help_text=b'Page count for this document')),
                ('document_type', models.TextField(blank=True, null=True)),
                ('document_url', models.TextField(help_text=b'The document URL {MAP Credentials required}')),
                ('create_date', models.TextField(help_text=b'The date the document was created in the system as a date object')),
                ('create_date_string', models.TextField(help_text=b'The date the document was created in the system as a string')),
                ('doc_filing_date', models.DateField(help_text=b'The date the document was filed in the system as a Date object')),
                ('doc_filing_date_string', models.TextField(help_text=b'The date the document was filed in the system as a String object')),
                ('image_type_id', models.TextField(help_text=b'Image Type ID')),
                ('app_id', models.TextField(help_text=b'ID for filing application, if any.')),
                ('doc_id', models.TextField(help_text=b'Internal Document ID')),
                ('document_type_id', models.TextField(help_text=b'Document Type ID')),
                ('odyssey_id', models.TextField(blank=True, null=True)),
                ('is_downloadable', models.BooleanField(default=True, help_text=b'Is the document downloadable by Courtlistener as a BOOL')),
                ('is_viewable', models.BooleanField(default=True, help_text=b'Is the document viewable by Courtlistener as a BOOL')),
                ('is_emailable', models.BooleanField(default=True, help_text=b'Is the document emailable by Courtlistener as a BOOL')),
                ('is_purchaseable', models.TextField(default=True, help_text=b'Is the document available to purchase by Courtlistener as a BOOL')),
                ('is_purchased', models.BooleanField(default=True, help_text=b'Has the document been purchased by Courtlistener as a BOOL')),
                ('downloaded', models.BooleanField(default=False, help_text=b'Has the document been downloaded as a BOOL')),
                ('security_level', models.TextField(blank=True, help_text=b'Document security level', null=True)),
                ('description', models.TextField(blank=True, help_text=b'Document description', null=True)),
                ('volume', models.TextField(blank=True, help_text=b'Document Volume', null=True)),
                ('doc_part', models.TextField(blank=True, help_text=b'Document Part', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentsFiled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(help_text=b'Case Number associated with the filed document', max_length=20)),
                ('date_filed', models.DateTimeField(help_text=b'Date a document was filed as a DateTime object')),
                ('date_filed_string', models.CharField(help_text=b'Date a document was filed as a string', max_length=25)),
                ('memo', models.TextField(blank=True, help_text=b'Memo describing document filed', null=True)),
                ('party', models.TextField(blank=True, help_text=b'Name of the Party responsible for the filed document', null=True)),
                ('document', models.TextField(blank=True, default=b'', help_text=b'Document Type', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
        ),
        migrations.CreateModel(
            name='Parties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.TextField(help_text=b'Case Number')),
                ('district', models.TextField(help_text=b'Court District')),
                ('division_code', models.TextField(help_text=b'Court Division ')),
                ('attorney_name', models.TextField(help_text=b'Attorney Name')),
                ('attorney_firm', models.TextField(help_text=b'Attorney Firm')),
                ('entity_number', models.TextField(help_text=b'Order entity/party joined cases system as String')),
                ('party_flag', models.TextField(help_text=b'Court Code representing party')),
                ('party_type_code', models.TextField(help_text=b'Court code representing party position')),
                ('party_description', models.TextField(help_text=b'Description of the party')),
                ('name', models.TextField(help_text=b'Full name of the party')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
        ),
        migrations.CreateModel(
            name='Proceedings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('am_pm', models.TextField(help_text=b'Was the proceeding in the AM or PM')),
                ('memo', models.TextField(help_text=b'Memo about the past proceeding')),
                ('address', models.TextField(help_text=b'Address of the past proceeding')),
                ('proceeding_date', models.TextField(help_text=b'Date of the past proceeding as a date object')),
                ('proceeding_date_string', models.TextField(help_text=b'Date of Past Proceeding as a string')),
                ('proceeding_room', models.TextField(help_text=b'The court room of the past proceeding')),
                ('proceeding_time', models.TextField(help_text=b'Time of the past proceeding in HH:MM string')),
                ('result', models.TextField(help_text=b'Result of the past proceeding')),
                ('judge', models.TextField(help_text=b'Judge in the past proceeding')),
                ('courthouse_name', models.TextField(help_text=b'Courthouse name for the past proceeding')),
                ('division_code', models.TextField(help_text=b'Courthouse Division {ex. CV = Civil}')),
                ('event', models.TextField(help_text=b'Event that occurred {ex. Jury Trial}')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('past_or_future', models.SmallIntegerField(blank=True, choices=[(1, b'Things in the past'), (2, b'Things in the future')], null=True)),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
            managers=[
                ('past_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RegisterOfActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text=b'Short description of the document')),
                ('additional_information', models.TextField(help_text=b'Additional information stored as HTML')),
                ('register_of_action_date_string', models.TextField(help_text=b'Date of Register of Action as a String')),
                ('register_of_action_date', models.DateTimeField(help_text=b'Date of Register of Action as a Date Object')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
        ),
        migrations.CreateModel(
            name='TentativeRulings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.TextField(help_text=b'Case number')),
                ('location_id', models.TextField(help_text=b'Internal court code for location')),
                ('department', models.TextField(help_text=b'Internal court code for department')),
                ('ruling', models.TextField(help_text=b'The court decision in HTML format as long string')),
                ('creation_date', models.DateTimeField(help_text=b'Date the ruling was decided as a date object')),
                ('creation_date_string', models.TextField(help_text=b'Date the ruling was added to the system as a string')),
                ('hearing_date', models.DateTimeField(help_text=b'')),
                ('hearing_date_string', models.TextField(help_text=b'')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text=b'The time when this item was created')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text=b'The last moment when the item was modified.')),
                ('Docket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket')),
            ],
        ),
        migrations.AddField(
            model_name='crossreferences',
            name='Docket',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket'),
        ),
        migrations.AddField(
            model_name='caseinformation',
            name='Docket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lasc.Docket'),
        ),
    ]
