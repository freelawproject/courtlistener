# Generated by Django 3.1.7 on 2021-05-28 19:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('audio', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('search', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocketTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docket_tags', to='search.docket')),
            ],
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('name', models.SlugField(help_text='The name of the tag')),
                ('title', models.TextField(blank=True, help_text='A title for the tag')),
                ('description', models.TextField(blank=True, help_text='The description of the tag in Markdown format')),
                ('view_count', models.IntegerField(db_index=True, default=0, help_text='The number of times the URL for the tag has been seen.')),
                ('published', models.BooleanField(db_index=True, default=False, help_text='Whether the tag has been shared publicly.')),
                ('dockets', models.ManyToManyField(blank=True, help_text='Dockets that are tagged with by this item', related_name='user_tags', through='favorites.DocketTag', to='search.Docket')),
                ('user', models.ForeignKey(help_text='The user that created the tag', on_delete=django.db.models.deletion.CASCADE, related_name='user_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
                'index_together': {('user', 'name')},
            },
        ),
        migrations.AddField(
            model_name='dockettag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docket_tags', to='favorites.usertag'),
        ),
        migrations.CreateModel(
            name='Prayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The time when this item was created')),
                ('status', models.SmallIntegerField(choices=[(1, 'Still waiting for the document.'), (2, 'Prayer has been granted.')], default=1, help_text='Whether the prayer has been granted or is still waiting.')),
                ('recap_document', models.ForeignKey(help_text="The document you're praying for.", on_delete=django.db.models.deletion.CASCADE, related_name='prayers', to='search.recapdocument')),
                ('user', models.ForeignKey(help_text='The user that made the prayer', on_delete=django.db.models.deletion.CASCADE, related_name='prayers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'index_together': {('recap_document', 'user'), ('recap_document', 'status'), ('date_created', 'user', 'status')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The original creation date for the item')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='a name for the alert')),
                ('notes', models.TextField(blank=True, max_length=500, validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='notes about the favorite')),
                ('audio_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='audio.audio', verbose_name='the audio file that is favorited')),
                ('cluster_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='search.opinioncluster', verbose_name='the opinion cluster that is favorited')),
                ('docket_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='search.docket', verbose_name='the docket that is favorited')),
                ('recap_doc_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='search.recapdocument', verbose_name='the RECAP document that is favorited')),
                ('user', models.ForeignKey(help_text='The user that owns the favorite', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('docket_id', 'user'), ('cluster_id', 'user'), ('audio_id', 'user'), ('recap_doc_id', 'user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='dockettag',
            unique_together={('docket', 'tag')},
        ),
    ]
