# Generated by Django 5.1.8 on 2025-08-26 04:01

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('donate', '0010_alter_neonmembership_level_noop'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='neonmembership',
            name='update_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='neonmembership',
            name='delete_delete',
        ),
        migrations.AddField(
            model_name='neonmembership',
            name='payment_status',
            field=models.SmallIntegerField(choices=[(0, 'Awaiting payment processing'), (1, 'Payment successfully processed'), (2, 'Payment failed or was declined')], default=0),
        ),
        migrations.AddField(
            model_name='neonmembershipevent',
            name='payment_status',
            field=models.SmallIntegerField(choices=[(0, 'Awaiting payment processing'), (1, 'Payment successfully processed'), (2, 'Payment failed or was declined')], default=0),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='neonmembership',
            trigger=pgtrigger.compiler.Trigger(name='update_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."level" IS DISTINCT FROM (NEW."level") OR OLD."neon_id" IS DISTINCT FROM (NEW."neon_id") OR OLD."payment_status" IS DISTINCT FROM (NEW."payment_status") OR OLD."termination_date" IS DISTINCT FROM (NEW."termination_date") OR OLD."user_id" IS DISTINCT FROM (NEW."user_id"))', func='INSERT INTO "donate_neonmembershipevent" ("date_created", "date_modified", "id", "level", "neon_id", "payment_status", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "termination_date", "user_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."level", OLD."neon_id", OLD."payment_status", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."termination_date", OLD."user_id"); RETURN NULL;', hash='3ad5891cacaf222d28cb3f06377921ab35a5c3ee', operation='UPDATE', pgid='pgtrigger_update_update_d4050', table='donate_neonmembership', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='neonmembership',
            trigger=pgtrigger.compiler.Trigger(name='delete_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "donate_neonmembershipevent" ("date_created", "date_modified", "id", "level", "neon_id", "payment_status", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "termination_date", "user_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."level", OLD."neon_id", OLD."payment_status", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."termination_date", OLD."user_id"); RETURN NULL;', hash='c7a66656c6e55f07e005b5590199929339b32ff6', operation='DELETE', pgid='pgtrigger_delete_delete_adaea', table='donate_neonmembership', when='AFTER')),
        ),
    ]
