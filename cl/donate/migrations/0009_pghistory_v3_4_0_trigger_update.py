# Generated by Django 5.0.8 on 2024-09-10 16:53

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("donate", "0008_add_membership_type_for_groups_noop"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="donation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="donation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="monthlydonation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="monthlydonation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="neonmembership",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="neonmembership",
            name="update_or_delete_snapshot_delete",
        ),
        migrations.AlterField(
            model_name="donationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="donate.donation",
            ),
        ),
        migrations.AlterField(
            model_name="monthlydonationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="donate.monthlydonation",
            ),
        ),
        migrations.AlterField(
            model_name="neonmembershipevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="donate.neonmembership",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="donation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."amount" IS DISTINCT FROM (NEW."amount") OR OLD."clearing_date" IS DISTINCT FROM (NEW."clearing_date") OR OLD."donor_id" IS DISTINCT FROM (NEW."donor_id") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."payment_id" IS DISTINCT FROM (NEW."payment_id") OR OLD."payment_provider" IS DISTINCT FROM (NEW."payment_provider") OR OLD."referrer" IS DISTINCT FROM (NEW."referrer") OR OLD."send_annual_reminder" IS DISTINCT FROM (NEW."send_annual_reminder") OR OLD."status" IS DISTINCT FROM (NEW."status") OR OLD."transaction_id" IS DISTINCT FROM (NEW."transaction_id"))',
                    func='INSERT INTO "donate_donationevent" ("amount", "clearing_date", "date_created", "date_modified", "donor_id", "id", "payment_id", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referrer", "send_annual_reminder", "status", "transaction_id") VALUES (OLD."amount", OLD."clearing_date", OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."id", OLD."payment_id", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."referrer", OLD."send_annual_reminder", OLD."status", OLD."transaction_id"); RETURN NULL;',
                    hash="ea632e41e4b989b387c8c9b747eb7085a2f26582",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_c1940",
                    table="donate_donation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="donation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "donate_donationevent" ("amount", "clearing_date", "date_created", "date_modified", "donor_id", "id", "payment_id", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referrer", "send_annual_reminder", "status", "transaction_id") VALUES (OLD."amount", OLD."clearing_date", OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."id", OLD."payment_id", OLD."payment_provider", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."referrer", OLD."send_annual_reminder", OLD."status", OLD."transaction_id"); RETURN NULL;',
                    hash="07834ab220e1fb063d5b064b8806853652d66b1a",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_d7f2f",
                    table="donate_donation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="monthlydonation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."donor_id" IS DISTINCT FROM (NEW."donor_id") OR OLD."enabled" IS DISTINCT FROM (NEW."enabled") OR OLD."failure_count" IS DISTINCT FROM (NEW."failure_count") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."monthly_donation_amount" IS DISTINCT FROM (NEW."monthly_donation_amount") OR OLD."monthly_donation_day" IS DISTINCT FROM (NEW."monthly_donation_day") OR OLD."payment_provider" IS DISTINCT FROM (NEW."payment_provider") OR OLD."stripe_customer_id" IS DISTINCT FROM (NEW."stripe_customer_id"))',
                    func='INSERT INTO "donate_monthlydonationevent" ("date_created", "date_modified", "donor_id", "enabled", "failure_count", "id", "monthly_donation_amount", "monthly_donation_day", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "stripe_customer_id") VALUES (OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."enabled", OLD."failure_count", OLD."id", OLD."monthly_donation_amount", OLD."monthly_donation_day", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."stripe_customer_id"); RETURN NULL;',
                    hash="6bce0071e4101db233c7ff7b133be749f6d00959",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_43440",
                    table="donate_monthlydonation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="monthlydonation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "donate_monthlydonationevent" ("date_created", "date_modified", "donor_id", "enabled", "failure_count", "id", "monthly_donation_amount", "monthly_donation_day", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "stripe_customer_id") VALUES (OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."enabled", OLD."failure_count", OLD."id", OLD."monthly_donation_amount", OLD."monthly_donation_day", OLD."payment_provider", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."stripe_customer_id"); RETURN NULL;',
                    hash="ce92e7e2cb63b819de935c977bdcfb2aa5a65528",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_7bf05",
                    table="donate_monthlydonation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="neonmembership",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."level" IS DISTINCT FROM (NEW."level") OR OLD."neon_id" IS DISTINCT FROM (NEW."neon_id") OR OLD."termination_date" IS DISTINCT FROM (NEW."termination_date") OR OLD."user_id" IS DISTINCT FROM (NEW."user_id"))',
                    func='INSERT INTO "donate_neonmembershipevent" ("date_created", "date_modified", "id", "level", "neon_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "termination_date", "user_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."level", OLD."neon_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."termination_date", OLD."user_id"); RETURN NULL;',
                    hash="dfc790dc2dca7c085efbebba619ec733405facdf",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_d4050",
                    table="donate_neonmembership",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="neonmembership",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "donate_neonmembershipevent" ("date_created", "date_modified", "id", "level", "neon_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "termination_date", "user_id") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."level", OLD."neon_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."termination_date", OLD."user_id"); RETURN NULL;',
                    hash="04d3313eb6899d4f205f712c9589230a6fbe4acc",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_adaea",
                    table="donate_neonmembership",
                    when="AFTER",
                ),
            ),
        ),
    ]
