# Generated by Django 3.2.18 on 2023-03-17 23:28

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('donate', '0003_add_event_tables_and_triggers'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='donation',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='donation',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='monthlydonation',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='monthlydonation',
            name='snapshot_update',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='donation',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."donor_id" IS DISTINCT FROM NEW."donor_id" OR OLD."clearing_date" IS DISTINCT FROM NEW."clearing_date" OR OLD."send_annual_reminder" IS DISTINCT FROM NEW."send_annual_reminder" OR OLD."amount" IS DISTINCT FROM NEW."amount" OR OLD."payment_provider" IS DISTINCT FROM NEW."payment_provider" OR OLD."payment_id" IS DISTINCT FROM NEW."payment_id" OR OLD."transaction_id" IS DISTINCT FROM NEW."transaction_id" OR OLD."status" IS DISTINCT FROM NEW."status" OR OLD."referrer" IS DISTINCT FROM NEW."referrer")', func='INSERT INTO "donate_donationevent" ("amount", "clearing_date", "date_created", "date_modified", "donor_id", "id", "payment_id", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referrer", "send_annual_reminder", "status", "transaction_id") VALUES (OLD."amount", OLD."clearing_date", OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."id", OLD."payment_id", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."referrer", OLD."send_annual_reminder", OLD."status", OLD."transaction_id"); RETURN NULL;', hash='18c813dbf79bc81e021be06228fa7d171377a97b', operation='UPDATE', pgid='pgtrigger_update_or_delete_snapshot_update_a4f64', table='donate_donation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='donation',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "donate_donationevent" ("amount", "clearing_date", "date_created", "date_modified", "donor_id", "id", "payment_id", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "referrer", "send_annual_reminder", "status", "transaction_id") VALUES (OLD."amount", OLD."clearing_date", OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."id", OLD."payment_id", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."referrer", OLD."send_annual_reminder", OLD."status", OLD."transaction_id"); RETURN NULL;', hash='e9a4cb37d1d5656f8d0883b52c09ea67fbde3354', operation='DELETE', pgid='pgtrigger_update_or_delete_snapshot_delete_db4d8', table='donate_donation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='monthlydonation',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."donor_id" IS DISTINCT FROM NEW."donor_id" OR OLD."enabled" IS DISTINCT FROM NEW."enabled" OR OLD."payment_provider" IS DISTINCT FROM NEW."payment_provider" OR OLD."monthly_donation_amount" IS DISTINCT FROM NEW."monthly_donation_amount" OR OLD."monthly_donation_day" IS DISTINCT FROM NEW."monthly_donation_day" OR OLD."stripe_customer_id" IS DISTINCT FROM NEW."stripe_customer_id" OR OLD."failure_count" IS DISTINCT FROM NEW."failure_count")', func='INSERT INTO "donate_monthlydonationevent" ("date_created", "date_modified", "donor_id", "enabled", "failure_count", "id", "monthly_donation_amount", "monthly_donation_day", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "stripe_customer_id") VALUES (OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."enabled", OLD."failure_count", OLD."id", OLD."monthly_donation_amount", OLD."monthly_donation_day", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."stripe_customer_id"); RETURN NULL;', hash='0faa21d4270b25f1726f87ee717e187a1a813915', operation='UPDATE', pgid='pgtrigger_update_or_delete_snapshot_update_e645e', table='donate_monthlydonation', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='monthlydonation',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "donate_monthlydonationevent" ("date_created", "date_modified", "donor_id", "enabled", "failure_count", "id", "monthly_donation_amount", "monthly_donation_day", "payment_provider", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "stripe_customer_id") VALUES (OLD."date_created", OLD."date_modified", OLD."donor_id", OLD."enabled", OLD."failure_count", OLD."id", OLD."monthly_donation_amount", OLD."monthly_donation_day", OLD."payment_provider", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."stripe_customer_id"); RETURN NULL;', hash='bdae30bec3ef6932e426d22c73ab9039d39fa30f', operation='DELETE', pgid='pgtrigger_update_or_delete_snapshot_delete_8ee4d', table='donate_monthlydonation', when='AFTER')),
        ),
    ]
