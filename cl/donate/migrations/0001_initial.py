# Generated by Django 3.1.7 on 2021-05-28 19:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MonthlyDonation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('enabled', models.BooleanField(default=True, help_text='Is this monthly donation enabled?')),
                ('payment_provider', models.CharField(choices=[('dwolla', 'Dwolla'), ('paypal', 'PayPal'), ('cc', 'Credit Card'), ('check', 'Check'), ('bitcoin', 'Bitcoin')], max_length=50)),
                ('monthly_donation_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_donation_day', models.SmallIntegerField(help_text='The day of the month that the monthly donation should be processed.')),
                ('stripe_customer_id', models.CharField(help_text='The ID of the Stripe customer object that we use to charge credit card users each month.', max_length=200)),
                ('failure_count', models.SmallIntegerField(default=0, help_text='The number of times this customer ID has failed. If a threshold is exceeded, we disable the subscription.')),
                ('donor', models.ForeignKey(help_text='The user that made the donation', on_delete=django.db.models.deletion.CASCADE, related_name='monthly_donations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The moment when the item was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True, help_text='The last moment when the item was modified. A value in year 1750 indicates the value is unknown')),
                ('clearing_date', models.DateTimeField(blank=True, null=True)),
                ('send_annual_reminder', models.BooleanField(default=False, verbose_name='Send me a reminder to donate again in one year')),
                ('amount', models.DecimalField(decimal_places=2, default=None, max_digits=10, validators=[django.core.validators.MinValueValidator(5, 'Sorry, the minimum donation amount is $5.00.')])),
                ('payment_provider', models.CharField(choices=[('dwolla', 'Dwolla'), ('paypal', 'PayPal'), ('cc', 'Credit Card'), ('check', 'Check'), ('bitcoin', 'Bitcoin')], default=None, max_length=50)),
                ('payment_id', models.CharField(help_text='Internal ID used during a transaction (used by PayPal and Stripe).', max_length=64)),
                ('transaction_id', models.CharField(blank=True, help_text='The ID of a transaction made in PayPal.', max_length=64, null=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Awaiting Payment'), (1, 'Unknown Error'), (2, 'Completed, but awaiting processing'), (3, 'Cancelled'), (4, 'Processed'), (5, 'Pending'), (6, 'Failed'), (7, 'Reclaimed/Refunded'), (8, 'Captured'), (9, 'Disputed'), (10, 'Dispute closed')])),
                ('referrer', models.TextField(blank=True, verbose_name='GET or HTTP referrer')),
                ('donor', models.ForeignKey(help_text='The user that made the donation', on_delete=django.db.models.deletion.CASCADE, related_name='donations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
    ]
