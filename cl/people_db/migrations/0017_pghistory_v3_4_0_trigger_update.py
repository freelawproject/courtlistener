# Generated by Django 5.0.8 on 2024-09-10 16:53

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        (
            "people_db",
            "0016_remove_abarating_update_or_delete_snapshot_update_and_more",
        ),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="abarating",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="abarating",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="education",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="education",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="person",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="person",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="personrace",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="personrace",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="politicalaffiliation",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="politicalaffiliation",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="position",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="position",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="race",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="race",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="retentionevent",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="retentionevent",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="school",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="school",
            name="update_or_delete_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="source",
            name="update_or_delete_snapshot_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="source",
            name="update_or_delete_snapshot_update",
        ),
        migrations.AlterField(
            model_name="abaratingevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.abarating",
            ),
        ),
        migrations.AlterField(
            model_name="educationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.education",
            ),
        ),
        migrations.AlterField(
            model_name="personevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.person",
            ),
        ),
        migrations.AlterField(
            model_name="politicalaffiliationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.politicalaffiliation",
            ),
        ),
        migrations.AlterField(
            model_name="positionevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.position",
            ),
        ),
        migrations.AlterField(
            model_name="raceevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.race",
            ),
        ),
        migrations.AlterField(
            model_name="retentioneventevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.retentionevent",
            ),
        ),
        migrations.AlterField(
            model_name="schoolevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.school",
            ),
        ),
        migrations.AlterField(
            model_name="sourceevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="people_db.source",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="abarating",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."person_id" IS DISTINCT FROM (NEW."person_id") OR OLD."rating" IS DISTINCT FROM (NEW."rating") OR OLD."year_rated" IS DISTINCT FROM (NEW."year_rated"))',
                    func='INSERT INTO "people_db_abaratingevent" ("date_created", "date_modified", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rating", "year_rated") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."rating", OLD."year_rated"); RETURN NULL;',
                    hash="08f526770f5215dded71b6ca405ab987ecb19eb9",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_12775",
                    table="people_db_abarating",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="abarating",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_abaratingevent" ("date_created", "date_modified", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "rating", "year_rated") VALUES (OLD."date_created", OLD."date_modified", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."rating", OLD."year_rated"); RETURN NULL;',
                    hash="8ac8cb3fbccac85e01f87fea2a4fea9725b3211c",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_328c3",
                    table="people_db_abarating",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="education",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."degree_detail" IS DISTINCT FROM (NEW."degree_detail") OR OLD."degree_level" IS DISTINCT FROM (NEW."degree_level") OR OLD."degree_year" IS DISTINCT FROM (NEW."degree_year") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."person_id" IS DISTINCT FROM (NEW."person_id") OR OLD."school_id" IS DISTINCT FROM (NEW."school_id"))',
                    func='INSERT INTO "people_db_educationevent" ("date_created", "date_modified", "degree_detail", "degree_level", "degree_year", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "school_id") VALUES (OLD."date_created", OLD."date_modified", OLD."degree_detail", OLD."degree_level", OLD."degree_year", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."school_id"); RETURN NULL;',
                    hash="7e36b8938bff8f0cb187399b7559da1f7548cc5b",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_4231e",
                    table="people_db_education",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="education",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_educationevent" ("date_created", "date_modified", "degree_detail", "degree_level", "degree_year", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "school_id") VALUES (OLD."date_created", OLD."date_modified", OLD."degree_detail", OLD."degree_level", OLD."degree_year", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."school_id"); RETURN NULL;',
                    hash="383713f24709c2a6a0588236877a232d22056c3b",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_e47b7",
                    table="people_db_education",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="person",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."date_completed" IS DISTINCT FROM (NEW."date_completed") OR OLD."date_dob" IS DISTINCT FROM (NEW."date_dob") OR OLD."date_dod" IS DISTINCT FROM (NEW."date_dod") OR OLD."date_granularity_dob" IS DISTINCT FROM (NEW."date_granularity_dob") OR OLD."date_granularity_dod" IS DISTINCT FROM (NEW."date_granularity_dod") OR OLD."dob_city" IS DISTINCT FROM (NEW."dob_city") OR OLD."dob_country" IS DISTINCT FROM (NEW."dob_country") OR OLD."dob_state" IS DISTINCT FROM (NEW."dob_state") OR OLD."dod_city" IS DISTINCT FROM (NEW."dod_city") OR OLD."dod_country" IS DISTINCT FROM (NEW."dod_country") OR OLD."dod_state" IS DISTINCT FROM (NEW."dod_state") OR OLD."fjc_id" IS DISTINCT FROM (NEW."fjc_id") OR OLD."ftm_eid" IS DISTINCT FROM (NEW."ftm_eid") OR OLD."ftm_total_received" IS DISTINCT FROM (NEW."ftm_total_received") OR OLD."gender" IS DISTINCT FROM (NEW."gender") OR OLD."has_photo" IS DISTINCT FROM (NEW."has_photo") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."is_alias_of_id" IS DISTINCT FROM (NEW."is_alias_of_id") OR OLD."name_first" IS DISTINCT FROM (NEW."name_first") OR OLD."name_last" IS DISTINCT FROM (NEW."name_last") OR OLD."name_middle" IS DISTINCT FROM (NEW."name_middle") OR OLD."name_suffix" IS DISTINCT FROM (NEW."name_suffix") OR OLD."religion" IS DISTINCT FROM (NEW."religion") OR OLD."slug" IS DISTINCT FROM (NEW."slug"))',
                    func='INSERT INTO "people_db_personevent" ("date_completed", "date_created", "date_dob", "date_dod", "date_granularity_dob", "date_granularity_dod", "date_modified", "dob_city", "dob_country", "dob_state", "dod_city", "dod_country", "dod_state", "fjc_id", "ftm_eid", "ftm_total_received", "gender", "has_photo", "id", "is_alias_of_id", "name_first", "name_last", "name_middle", "name_suffix", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "religion", "slug") VALUES (OLD."date_completed", OLD."date_created", OLD."date_dob", OLD."date_dod", OLD."date_granularity_dob", OLD."date_granularity_dod", OLD."date_modified", OLD."dob_city", OLD."dob_country", OLD."dob_state", OLD."dod_city", OLD."dod_country", OLD."dod_state", OLD."fjc_id", OLD."ftm_eid", OLD."ftm_total_received", OLD."gender", OLD."has_photo", OLD."id", OLD."is_alias_of_id", OLD."name_first", OLD."name_last", OLD."name_middle", OLD."name_suffix", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."religion", OLD."slug"); RETURN NULL;',
                    hash="a149c066c604920a20d3df998c8a282a788082ea",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_ae961",
                    table="people_db_person",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="person",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_personevent" ("date_completed", "date_created", "date_dob", "date_dod", "date_granularity_dob", "date_granularity_dod", "date_modified", "dob_city", "dob_country", "dob_state", "dod_city", "dod_country", "dod_state", "fjc_id", "ftm_eid", "ftm_total_received", "gender", "has_photo", "id", "is_alias_of_id", "name_first", "name_last", "name_middle", "name_suffix", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "religion", "slug") VALUES (OLD."date_completed", OLD."date_created", OLD."date_dob", OLD."date_dod", OLD."date_granularity_dob", OLD."date_granularity_dod", OLD."date_modified", OLD."dob_city", OLD."dob_country", OLD."dob_state", OLD."dod_city", OLD."dod_country", OLD."dod_state", OLD."fjc_id", OLD."ftm_eid", OLD."ftm_total_received", OLD."gender", OLD."has_photo", OLD."id", OLD."is_alias_of_id", OLD."name_first", OLD."name_last", OLD."name_middle", OLD."name_suffix", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."religion", OLD."slug"); RETURN NULL;',
                    hash="79a19882c54b7b71eb73e97da70437d8960e422c",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_3bdd3",
                    table="people_db_person",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="personrace",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_personraceevent" ("id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "race_id") VALUES (NEW."id", NEW."person_id", _pgh_attach_context(), NOW(), \'insert\', NEW."race_id"); RETURN NULL;',
                    hash="07eec846215436aeb1b4a02f823e7d54d3a9ea31",
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_4de9d",
                    table="people_db_person_race",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="personrace",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_personraceevent" ("id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "race_id") VALUES (OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."race_id"); RETURN NULL;',
                    hash="3679cfa4190e443aa2d99b5dfd2cf459d2770260",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_53db8",
                    table="people_db_person_race",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="politicalaffiliation",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."date_end" IS DISTINCT FROM (NEW."date_end") OR OLD."date_granularity_end" IS DISTINCT FROM (NEW."date_granularity_end") OR OLD."date_granularity_start" IS DISTINCT FROM (NEW."date_granularity_start") OR OLD."date_start" IS DISTINCT FROM (NEW."date_start") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."person_id" IS DISTINCT FROM (NEW."person_id") OR OLD."political_party" IS DISTINCT FROM (NEW."political_party") OR OLD."source" IS DISTINCT FROM (NEW."source"))',
                    func='INSERT INTO "people_db_politicalaffiliationevent" ("date_created", "date_end", "date_granularity_end", "date_granularity_start", "date_modified", "date_start", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "political_party", "source") VALUES (OLD."date_created", OLD."date_end", OLD."date_granularity_end", OLD."date_granularity_start", OLD."date_modified", OLD."date_start", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."political_party", OLD."source"); RETURN NULL;',
                    hash="bcf04e5f5e19d54eb26453095a64c370b3acc9c9",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_732bd",
                    table="people_db_politicalaffiliation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="politicalaffiliation",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_politicalaffiliationevent" ("date_created", "date_end", "date_granularity_end", "date_granularity_start", "date_modified", "date_start", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "political_party", "source") VALUES (OLD."date_created", OLD."date_end", OLD."date_granularity_end", OLD."date_granularity_start", OLD."date_modified", OLD."date_start", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."political_party", OLD."source"); RETURN NULL;',
                    hash="7b68ad289297e13a8a0399225f5feb659d4a3702",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_868cc",
                    table="people_db_politicalaffiliation",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="position",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."appointer_id" IS DISTINCT FROM (NEW."appointer_id") OR OLD."court_id" IS DISTINCT FROM (NEW."court_id") OR OLD."date_confirmation" IS DISTINCT FROM (NEW."date_confirmation") OR OLD."date_elected" IS DISTINCT FROM (NEW."date_elected") OR OLD."date_granularity_start" IS DISTINCT FROM (NEW."date_granularity_start") OR OLD."date_granularity_termination" IS DISTINCT FROM (NEW."date_granularity_termination") OR OLD."date_hearing" IS DISTINCT FROM (NEW."date_hearing") OR OLD."date_judicial_committee_action" IS DISTINCT FROM (NEW."date_judicial_committee_action") OR OLD."date_nominated" IS DISTINCT FROM (NEW."date_nominated") OR OLD."date_recess_appointment" IS DISTINCT FROM (NEW."date_recess_appointment") OR OLD."date_referred_to_judicial_committee" IS DISTINCT FROM (NEW."date_referred_to_judicial_committee") OR OLD."date_retirement" IS DISTINCT FROM (NEW."date_retirement") OR OLD."date_start" IS DISTINCT FROM (NEW."date_start") OR OLD."date_termination" IS DISTINCT FROM (NEW."date_termination") OR OLD."has_inferred_values" IS DISTINCT FROM (NEW."has_inferred_values") OR OLD."how_selected" IS DISTINCT FROM (NEW."how_selected") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."job_title" IS DISTINCT FROM (NEW."job_title") OR OLD."judicial_committee_action" IS DISTINCT FROM (NEW."judicial_committee_action") OR OLD."location_city" IS DISTINCT FROM (NEW."location_city") OR OLD."location_state" IS DISTINCT FROM (NEW."location_state") OR OLD."nomination_process" IS DISTINCT FROM (NEW."nomination_process") OR OLD."organization_name" IS DISTINCT FROM (NEW."organization_name") OR OLD."person_id" IS DISTINCT FROM (NEW."person_id") OR OLD."position_type" IS DISTINCT FROM (NEW."position_type") OR OLD."predecessor_id" IS DISTINCT FROM (NEW."predecessor_id") OR OLD."school_id" IS DISTINCT FROM (NEW."school_id") OR OLD."sector" IS DISTINCT FROM (NEW."sector") OR OLD."supervisor_id" IS DISTINCT FROM (NEW."supervisor_id") OR OLD."termination_reason" IS DISTINCT FROM (NEW."termination_reason") OR OLD."voice_vote" IS DISTINCT FROM (NEW."voice_vote") OR OLD."vote_type" IS DISTINCT FROM (NEW."vote_type") OR OLD."votes_no" IS DISTINCT FROM (NEW."votes_no") OR OLD."votes_no_percent" IS DISTINCT FROM (NEW."votes_no_percent") OR OLD."votes_yes" IS DISTINCT FROM (NEW."votes_yes") OR OLD."votes_yes_percent" IS DISTINCT FROM (NEW."votes_yes_percent"))',
                    func='INSERT INTO "people_db_positionevent" ("appointer_id", "court_id", "date_confirmation", "date_created", "date_elected", "date_granularity_start", "date_granularity_termination", "date_hearing", "date_judicial_committee_action", "date_modified", "date_nominated", "date_recess_appointment", "date_referred_to_judicial_committee", "date_retirement", "date_start", "date_termination", "has_inferred_values", "how_selected", "id", "job_title", "judicial_committee_action", "location_city", "location_state", "nomination_process", "organization_name", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_type", "predecessor_id", "school_id", "sector", "supervisor_id", "termination_reason", "voice_vote", "vote_type", "votes_no", "votes_no_percent", "votes_yes", "votes_yes_percent") VALUES (OLD."appointer_id", OLD."court_id", OLD."date_confirmation", OLD."date_created", OLD."date_elected", OLD."date_granularity_start", OLD."date_granularity_termination", OLD."date_hearing", OLD."date_judicial_committee_action", OLD."date_modified", OLD."date_nominated", OLD."date_recess_appointment", OLD."date_referred_to_judicial_committee", OLD."date_retirement", OLD."date_start", OLD."date_termination", OLD."has_inferred_values", OLD."how_selected", OLD."id", OLD."job_title", OLD."judicial_committee_action", OLD."location_city", OLD."location_state", OLD."nomination_process", OLD."organization_name", OLD."person_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."position_type", OLD."predecessor_id", OLD."school_id", OLD."sector", OLD."supervisor_id", OLD."termination_reason", OLD."voice_vote", OLD."vote_type", OLD."votes_no", OLD."votes_no_percent", OLD."votes_yes", OLD."votes_yes_percent"); RETURN NULL;',
                    hash="d877c295481aa7a5d99498db3d07a9a079fd0653",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_de8c0",
                    table="people_db_position",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="position",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_positionevent" ("appointer_id", "court_id", "date_confirmation", "date_created", "date_elected", "date_granularity_start", "date_granularity_termination", "date_hearing", "date_judicial_committee_action", "date_modified", "date_nominated", "date_recess_appointment", "date_referred_to_judicial_committee", "date_retirement", "date_start", "date_termination", "has_inferred_values", "how_selected", "id", "job_title", "judicial_committee_action", "location_city", "location_state", "nomination_process", "organization_name", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_type", "predecessor_id", "school_id", "sector", "supervisor_id", "termination_reason", "voice_vote", "vote_type", "votes_no", "votes_no_percent", "votes_yes", "votes_yes_percent") VALUES (OLD."appointer_id", OLD."court_id", OLD."date_confirmation", OLD."date_created", OLD."date_elected", OLD."date_granularity_start", OLD."date_granularity_termination", OLD."date_hearing", OLD."date_judicial_committee_action", OLD."date_modified", OLD."date_nominated", OLD."date_recess_appointment", OLD."date_referred_to_judicial_committee", OLD."date_retirement", OLD."date_start", OLD."date_termination", OLD."has_inferred_values", OLD."how_selected", OLD."id", OLD."job_title", OLD."judicial_committee_action", OLD."location_city", OLD."location_state", OLD."nomination_process", OLD."organization_name", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."position_type", OLD."predecessor_id", OLD."school_id", OLD."sector", OLD."supervisor_id", OLD."termination_reason", OLD."voice_vote", OLD."vote_type", OLD."votes_no", OLD."votes_no_percent", OLD."votes_yes", OLD."votes_yes_percent"); RETURN NULL;',
                    hash="f6be21514efe680ca6c1bce2f82b091ab0733db7",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_d9c2f",
                    table="people_db_position",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="race",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "people_db_raceevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "race") VALUES (OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."race"); RETURN NULL;',
                    hash="6b32b6b67404a0d9604523642cd144e689f66d12",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_319e8",
                    table="people_db_race",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="race",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_raceevent" ("id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "race") VALUES (OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."race"); RETURN NULL;',
                    hash="7e8b396098110fbaf41140d5ea77c0513676ac2f",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_e1249",
                    table="people_db_race",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="retentionevent",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."date_retention" IS DISTINCT FROM (NEW."date_retention") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."position_id" IS DISTINCT FROM (NEW."position_id") OR OLD."retention_type" IS DISTINCT FROM (NEW."retention_type") OR OLD."unopposed" IS DISTINCT FROM (NEW."unopposed") OR OLD."votes_no" IS DISTINCT FROM (NEW."votes_no") OR OLD."votes_no_percent" IS DISTINCT FROM (NEW."votes_no_percent") OR OLD."votes_yes" IS DISTINCT FROM (NEW."votes_yes") OR OLD."votes_yes_percent" IS DISTINCT FROM (NEW."votes_yes_percent") OR OLD."won" IS DISTINCT FROM (NEW."won"))',
                    func='INSERT INTO "people_db_retentioneventevent" ("date_created", "date_modified", "date_retention", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_id", "retention_type", "unopposed", "votes_no", "votes_no_percent", "votes_yes", "votes_yes_percent", "won") VALUES (OLD."date_created", OLD."date_modified", OLD."date_retention", OLD."id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."position_id", OLD."retention_type", OLD."unopposed", OLD."votes_no", OLD."votes_no_percent", OLD."votes_yes", OLD."votes_yes_percent", OLD."won"); RETURN NULL;',
                    hash="2d4b967a62b69659f567e003e1b29c240c10083a",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_28a9a",
                    table="people_db_retentionevent",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="retentionevent",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_retentioneventevent" ("date_created", "date_modified", "date_retention", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "position_id", "retention_type", "unopposed", "votes_no", "votes_no_percent", "votes_yes", "votes_yes_percent", "won") VALUES (OLD."date_created", OLD."date_modified", OLD."date_retention", OLD."id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."position_id", OLD."retention_type", OLD."unopposed", OLD."votes_no", OLD."votes_no_percent", OLD."votes_yes", OLD."votes_yes_percent", OLD."won"); RETURN NULL;',
                    hash="f2302aa32ca9863dd528bed3ec6d041c34fad306",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_15a5d",
                    table="people_db_retentionevent",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="school",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."ein" IS DISTINCT FROM (NEW."ein") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."is_alias_of_id" IS DISTINCT FROM (NEW."is_alias_of_id") OR OLD."name" IS DISTINCT FROM (NEW."name"))',
                    func='INSERT INTO "people_db_schoolevent" ("date_created", "date_modified", "ein", "id", "is_alias_of_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."date_created", OLD."date_modified", OLD."ein", OLD."id", OLD."is_alias_of_id", OLD."name", _pgh_attach_context(), NOW(), \'update\', OLD."id"); RETURN NULL;',
                    hash="a857ce7bf9b8852fabbb718af336cb62b4b27c96",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_4056a",
                    table="people_db_school",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="school",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_schoolevent" ("date_created", "date_modified", "ein", "id", "is_alias_of_id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."date_created", OLD."date_modified", OLD."ein", OLD."id", OLD."is_alias_of_id", OLD."name", _pgh_attach_context(), NOW(), \'delete\', OLD."id"); RETURN NULL;',
                    hash="5ef3e418face8d0ff04fb5a47c2e23cb84729fce",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_7b0f9",
                    table="people_db_school",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="source",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."date_accessed" IS DISTINCT FROM (NEW."date_accessed") OR OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."notes" IS DISTINCT FROM (NEW."notes") OR OLD."person_id" IS DISTINCT FROM (NEW."person_id") OR OLD."url" IS DISTINCT FROM (NEW."url"))',
                    func='INSERT INTO "people_db_sourceevent" ("date_accessed", "date_created", "date_modified", "id", "notes", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "url") VALUES (OLD."date_accessed", OLD."date_created", OLD."date_modified", OLD."id", OLD."notes", OLD."person_id", _pgh_attach_context(), NOW(), \'update\', OLD."id", OLD."url"); RETURN NULL;',
                    hash="07a3f2d9e82866e155768d6aa0d4083871dee5b7",
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_c9b6d",
                    table="people_db_source",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="source",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "people_db_sourceevent" ("date_accessed", "date_created", "date_modified", "id", "notes", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "url") VALUES (OLD."date_accessed", OLD."date_created", OLD."date_modified", OLD."id", OLD."notes", OLD."person_id", _pgh_attach_context(), NOW(), \'delete\', OLD."id", OLD."url"); RETURN NULL;',
                    hash="017c01d3ebc53bbfd806f6eb3dcc046457fff8ce",
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_9d499",
                    table="people_db_source",
                    when="AFTER",
                ),
            ),
        ),
    ]
