# Generated by Django 3.2.18 on 2023-03-17 23:24

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('audio', '0002_add_event_tables_and_triggers'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='audio',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audio',
            name='snapshot_update',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audiopanel',
            name='snapshot_insert',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='audiopanel',
            name='snapshot_update',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audio',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."date_created" IS DISTINCT FROM NEW."date_created" OR OLD."docket_id" IS DISTINCT FROM NEW."docket_id" OR OLD."source" IS DISTINCT FROM NEW."source" OR OLD."case_name_short" IS DISTINCT FROM NEW."case_name_short" OR OLD."case_name" IS DISTINCT FROM NEW."case_name" OR OLD."case_name_full" IS DISTINCT FROM NEW."case_name_full" OR OLD."judges" IS DISTINCT FROM NEW."judges" OR OLD."sha1" IS DISTINCT FROM NEW."sha1" OR OLD."download_url" IS DISTINCT FROM NEW."download_url" OR OLD."local_path_mp3" IS DISTINCT FROM NEW."local_path_mp3" OR OLD."local_path_original_file" IS DISTINCT FROM NEW."local_path_original_file" OR OLD."filepath_ia" IS DISTINCT FROM NEW."filepath_ia" OR OLD."ia_upload_failure_count" IS DISTINCT FROM NEW."ia_upload_failure_count" OR OLD."duration" IS DISTINCT FROM NEW."duration" OR OLD."processing_complete" IS DISTINCT FROM NEW."processing_complete" OR OLD."date_blocked" IS DISTINCT FROM NEW."date_blocked" OR OLD."blocked" IS DISTINCT FROM NEW."blocked" OR OLD."stt_status" IS DISTINCT FROM NEW."stt_status" OR OLD."stt_google_response" IS DISTINCT FROM NEW."stt_google_response")', func='INSERT INTO "audio_audioevent" ("blocked", "case_name", "case_name_full", "case_name_short", "date_blocked", "date_created", "date_modified", "docket_id", "download_url", "duration", "filepath_ia", "ia_upload_failure_count", "id", "judges", "local_path_mp3", "local_path_original_file", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "processing_complete", "sha1", "source", "stt_google_response", "stt_status") VALUES (OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."date_blocked", OLD."date_created", OLD."date_modified", OLD."docket_id", OLD."download_url", OLD."duration", OLD."filepath_ia", OLD."ia_upload_failure_count", OLD."id", OLD."judges", OLD."local_path_mp3", OLD."local_path_original_file", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."processing_complete", OLD."sha1", OLD."source", OLD."stt_google_response", OLD."stt_status"); RETURN NULL;', hash='7ef321a055255b671442addc460e459a3449f479', operation='UPDATE', pgid='pgtrigger_update_or_delete_snapshot_update_63362', table='audio_audio', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audio',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "audio_audioevent" ("blocked", "case_name", "case_name_full", "case_name_short", "date_blocked", "date_created", "date_modified", "docket_id", "download_url", "duration", "filepath_ia", "ia_upload_failure_count", "id", "judges", "local_path_mp3", "local_path_original_file", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "processing_complete", "sha1", "source", "stt_google_response", "stt_status") VALUES (OLD."blocked", OLD."case_name", OLD."case_name_full", OLD."case_name_short", OLD."date_blocked", OLD."date_created", OLD."date_modified", OLD."docket_id", OLD."download_url", OLD."duration", OLD."filepath_ia", OLD."ia_upload_failure_count", OLD."id", OLD."judges", OLD."local_path_mp3", OLD."local_path_original_file", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\', OLD."id", OLD."processing_complete", OLD."sha1", OLD."source", OLD."stt_google_response", OLD."stt_status"); RETURN NULL;', hash='3f15b50d6ff720dceeaf2b1cff5606bf76e31fba', operation='DELETE', pgid='pgtrigger_update_or_delete_snapshot_delete_63666', table='audio_audio', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audiopanel',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD.* IS DISTINCT FROM NEW.*)', func='INSERT INTO "audio_audiopanelevent" ("audio_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."audio_id", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\'); RETURN NULL;', hash='9cadb65943a3d38e84beba67c55089ef7955f87e', operation='UPDATE', pgid='pgtrigger_update_or_delete_snapshot_update_4e441', table='audio_audio_panel', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='audiopanel',
            trigger=pgtrigger.compiler.Trigger(name='update_or_delete_snapshot_delete', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "audio_audiopanelevent" ("audio_id", "id", "person_id", "pgh_context_id", "pgh_created_at", "pgh_label") VALUES (OLD."audio_id", OLD."id", OLD."person_id", _pgh_attach_context(), NOW(), \'update_or_delete_snapshot\'); RETURN NULL;', hash='8281b6cb81fc9e9dcce8dff7fe60a40dc051cd7f', operation='DELETE', pgid='pgtrigger_update_or_delete_snapshot_delete_f5717', table='audio_audio_panel', when='AFTER')),
        ),
    ]
