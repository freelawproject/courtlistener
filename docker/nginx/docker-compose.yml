version: "3.7"
volumes:
  cl-judge-pics:
  cl-seal-rookery:

services:
  cl-python:
    container_name: cl-python
    image: freelawproject/courtlistener-django:latest
    depends_on:
      - cl-judge-pics
      - cl-seal-rookery
      - cl-selenium
    expose:
      - 8000
    volumes:
      - ${CL_BASE_DIR:-../..}:/opt/courtlistener
      - ${BULK_DIR:-/sata/}:/storage/
      - cl-judge-pics:${PYTHON_PACKAGES}/judge_pics
      - cl-seal-rookery:${PYTHON_PACKAGES}/seal_rookery
    environment:
      # Make it easy to connect to selenium. Juriscraper will pick up this var.
      - WEBDRIVER_CONN="http://cl-selenium:4444/wd/hub"
    logging:
      driver: journald
    extra_hosts:
      - "localhost:192.168.0.122"
    restart: on-failure
    command: >
      bash -c "gunicorn cl_wsgi:application \
        --chdir /opt/courtlistener/docker/nginx/wsgi-configs/ \
        --user www-data \
        --group www-data \
        `# Set high number of workers. Docs recommend 2-4Ã— core count` \
        --workers ${NUM_WORKERS:-48} \
        `# Allow longer queries to solr.` \
        --limit-request-line 6000 \
        `# Reset each worker once in a while` \
        --max-requests 10000 \
        --max-requests-jitter 100 \
        --timeout 180 \
        --bind 0.0.0.0:8000"

  cl-scrape-rss:
    container_name: cl-scrape-rss
    image: freelawproject/courtlistener-django:latest
    volumes:
      - ${CL_BASE_DIR:-../..}:/opt/courtlistener
      - ${BULK_DIR:-/sata/}:/storage/
      - cl-judge-pics:${PYTHON_PACKAGES}/judge_pics
      - cl-seal-rookery:${PYTHON_PACKAGES}/seal_rookery
    logging:
      driver: journald
    user: www-data
    extra_hosts:
      - "localhost:192.168.0.122"
    restart: on-failure
    command: /opt/courtlistener/manage.py scrape_rss

  cl-ia-recap-uploader:
    container_name: cl-ia-recap-uploader
    image: freelawproject/courtlistener-django:latest
    volumes:
      - ${CL_BASE_DIR:-../..}:/opt/courtlistener
      - ${BULK_DIR:-/sata/}:/storage/
      - cl-judge-pics:${PYTHON_PACKAGES}/judge_pics
      - cl-seal-rookery:${PYTHON_PACKAGES}/seal_rookery
    logging:
      driver: journald
    user: www-data
    extra_hosts:
      - "localhost:192.168.0.122"
    restart: on-failure
    command: >
        /opt/courtlistener/manage.py upload_to_ia
        --action upload-recap-data-to-ia
        --queue iauploads
        --database replica

  # Before renaming this service, see: freelawproject/courtlistener#1433
  cl-nginx:
    container_name: cl-nginx
    image: freelawproject/nginx:latest
    depends_on:
      - cl-python
    volumes:
      - cl-judge-pics:${PYTHON_PACKAGES}/judge_pics
      - ${CL_BASE_DIR:-../..}:/opt/courtlistener
      - ${CERT_HOME:-/etc/letsencrypt}:/etc/letsencrypt:ro
      - ${BULK_DIR:-/sata/}:/storage/
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: journald
    extra_hosts:
      - "localhost:192.168.0.122"
    restart: on-failure

  cl-selenium:
    container_name: cl-selenium-scraper
    image: selenium/standalone-firefox-debug
    ports:
      - 4444:4444  # Selenium
    volumes:
      - ${CL_SHM_DIR:-/dev/shm}:/dev/shm
    logging:
      driver: journald
    extra_hosts:
      - "localhost:192.168.0.122"
    restart: on-failure

  cl-judge-pics:
    image: freelawproject/judge-pics:latest
    container_name: "cl-judge-pics"
    volumes:
      - cl-judge-pics:${PYTHON_PACKAGES}/judge_pics
    deploy:
      restart_policy:
        condition: none

  cl-seal-rookery:
    image: freelawproject/seal-rookery:latest
    container_name: "cl-seal-rookery"
    volumes:
      - cl-seal-rookery:${PYTHON_PACKAGES}/seal_rookery
    deploy:
      restart_policy:
        condition: none
