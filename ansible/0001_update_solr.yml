---

# Whatever it takes to update Solr from 4.1 from 4.10.4, according to:
# https://github.com/freelawproject/courtlistener/issues/567
- hosts: celery
  tasks:
  - name: check if celery exists (or this is a dev machine)
    stat: path=/etc/init.d/celeryd
    register: celeryd_status
  - name: stop celery (this stops data going to Solr)
    service:
      name=celeryd
      state=stopped
    when: celeryd_status.stat.exists

- hosts: solr
  vars_files:
  - defaults.yml
  tasks:
  - name: optimize all solr cores
    django_manage:
      app_path={{ INSTALL_ROOT }}
      command="cl_update_index --optimize-everything"
      virtualenv={{ VIRTUALENV_ROOT }}
    async: 10000
    poll: 0
    register: solr_sleeper
  - name: download solr
    become: yes
    become_user: root
    get_url:
      url="https://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.4.tgz"
      dest=/tmp/solr-4.10.4.tgz
      mode=0644
      checksum="sha1:0edf666bea51990524e520bdcb811e14b4de4c41"
  - name: unarchive solr
    become: yes
    become_user: root
    unarchive:
      remote_src=yes
      src=/tmp/solr-4.10.4.tgz
      dest=/usr/local
      creates=/usr/local/solr-4.10.4
  - name: wait for solr optimize to finish
    async_status: jid={{ solr_sleeper.ansible_job_id }}
    register: job_result
    until: job_result.finished
    retries: 999
    delay: 10

  # Set up new Solr with old cores and configs
  - name: copy old core configs to new Solr
    become: yes
    become_user: root
    synchronize:
      src="/usr/local/solr/example/solr/{{ item }}/"
      dest="/usr/local/solr-4.10.4/example/solr/{{ item }}"
      recursive=yes
    delegate_to: "{{ inventory_hostname }}"
    with_items:
      - audio
      - collection1
      - person
  - name: set up new solr properties files
    become: yes
    become_user: root
    template:
      src="1.6.0/templates/{{ item }}.properties.j2"
      dest="/usr/local/solr-4.10.4/example/solr/{{ item }}/core.properties"
    with_items:
      - audio
      - collection1
      - person

  # Solr doesn't like to load things from outside of its instance directory. So,
  # in they go via symlinks.
  - name: tweak synonym, protwords, and stopwords files to be symlinks
    become: yes
    become_user: root
    file:
      src="{{ INSTALL_ROOT }}/Solr/conf/lang/{{ item[1] }}.txt"
      path="/usr/local/solr-4.10.4/example/solr/{{ item[0] }}/conf/lang/{{ item[1] }}.txt"
      state=link
      force=yes
    with_nested:
      - ['audio', 'collection1', 'person']
      - ['synonyms_en', 'stopwords_en', 'protwords_en']

  # The example solr config crashes unless you stub out this file. See:
  # http://stackoverflow.com/a/10896359/64911
  - name: replace the default elevate file
    become: yes
    become_user: root
    template:
      src="1.6.0/templates/elevate.xml"
      dest="/usr/local/solr-4.10.4/example/solr/{{ item }}/conf/elevate.xml"
    with_items:
      - audio
      - collection1
      - person

  # Stop Solr, swap out the old, and swap in the new.
  - name: stop solr
    service:
      name=solr
      state=stopped
  - name: backup old solr
    become: yes
    become_user: root
    command: >
      mv /usr/local/solr /usr/local/solr-4.1
      creates=/usr/local/solr-4.1
      removes=/usr/local/solr
  - name: link up new solr
    become: yes
    become_user: root
    file:
      src=/usr/local/solr-4.10.4
      path=/usr/local/solr
      state=link
      force=yes

  # Start things up again.
  - name: restart solr
    service:
      name=solr
      state=started

- hosts: celery
  tasks:
  - name: start celery
    service:
      name=celeryd
      state=started
    when: celeryd_status.stat.exists

# Optimize a second time, with new configs and versions.
- hosts: solr
  vars_files:
  - defaults.yml
  tasks:
  - name: optimize all solr cores
    django_manage:
      app_path={{ INSTALL_ROOT }}
      command="cl_update_index --optimize-everything"
      virtualenv={{ VIRTUALENV_ROOT }}
